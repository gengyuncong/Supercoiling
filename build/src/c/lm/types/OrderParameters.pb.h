// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lm/types/OrderParameters.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_lm_2ftypes_2fOrderParameters_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_lm_2ftypes_2fOrderParameters_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_lm_2ftypes_2fOrderParameters_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_lm_2ftypes_2fOrderParameters_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_lm_2ftypes_2fOrderParameters_2eproto;
namespace lm {
namespace types {
class OrderParameter;
class OrderParameterDefaultTypeInternal;
extern OrderParameterDefaultTypeInternal _OrderParameter_default_instance_;
class OrderParameters;
class OrderParametersDefaultTypeInternal;
extern OrderParametersDefaultTypeInternal _OrderParameters_default_instance_;
}  // namespace types
}  // namespace lm
PROTOBUF_NAMESPACE_OPEN
template<> ::lm::types::OrderParameter* Arena::CreateMaybeMessage<::lm::types::OrderParameter>(Arena*);
template<> ::lm::types::OrderParameters* Arena::CreateMaybeMessage<::lm::types::OrderParameters>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace lm {
namespace types {

// ===================================================================

class OrderParameter PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:lm.types.OrderParameter) */ {
 public:
  inline OrderParameter() : OrderParameter(nullptr) {}
  virtual ~OrderParameter();

  OrderParameter(const OrderParameter& from);
  OrderParameter(OrderParameter&& from) noexcept
    : OrderParameter() {
    *this = ::std::move(from);
  }

  inline OrderParameter& operator=(const OrderParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderParameter& operator=(OrderParameter&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OrderParameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderParameter* internal_default_instance() {
    return reinterpret_cast<const OrderParameter*>(
               &_OrderParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(OrderParameter& a, OrderParameter& b) {
    a.Swap(&b);
  }
  inline void Swap(OrderParameter* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderParameter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OrderParameter* New() const final {
    return CreateMaybeMessage<OrderParameter>(nullptr);
  }

  OrderParameter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OrderParameter>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OrderParameter& from);
  void MergeFrom(const OrderParameter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderParameter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "lm.types.OrderParameter";
  }
  protected:
  explicit OrderParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_lm_2ftypes_2fOrderParameters_2eproto);
    return ::descriptor_table_lm_2ftypes_2fOrderParameters_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpeciesIndexFieldNumber = 2,
    kSpeciesCoefficientFieldNumber = 3,
    kSpeciesExponentFieldNumber = 4,
    kTypeFieldNumber = 1,
  };
  // repeated uint32 species_index = 2 [packed = true];
  int species_index_size() const;
  private:
  int _internal_species_index_size() const;
  public:
  void clear_species_index();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_species_index(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_species_index() const;
  void _internal_add_species_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_species_index();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 species_index(int index) const;
  void set_species_index(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_species_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      species_index() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_species_index();

  // repeated double species_coefficient = 3 [packed = true];
  int species_coefficient_size() const;
  private:
  int _internal_species_coefficient_size() const;
  public:
  void clear_species_coefficient();
  private:
  double _internal_species_coefficient(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_species_coefficient() const;
  void _internal_add_species_coefficient(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_species_coefficient();
  public:
  double species_coefficient(int index) const;
  void set_species_coefficient(int index, double value);
  void add_species_coefficient(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      species_coefficient() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_species_coefficient();

  // repeated double species_exponent = 4 [packed = true];
  int species_exponent_size() const;
  private:
  int _internal_species_exponent_size() const;
  public:
  void clear_species_exponent();
  private:
  double _internal_species_exponent(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_species_exponent() const;
  void _internal_add_species_exponent(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_species_exponent();
  public:
  double species_exponent(int index) const;
  void set_species_exponent(int index, double value);
  void add_species_exponent(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      species_exponent() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_species_exponent();

  // required uint32 type = 1;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:lm.types.OrderParameter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > species_index_;
  mutable std::atomic<int> _species_index_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > species_coefficient_;
  mutable std::atomic<int> _species_coefficient_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > species_exponent_;
  mutable std::atomic<int> _species_exponent_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 type_;
  friend struct ::TableStruct_lm_2ftypes_2fOrderParameters_2eproto;
};
// -------------------------------------------------------------------

class OrderParameters PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:lm.types.OrderParameters) */ {
 public:
  inline OrderParameters() : OrderParameters(nullptr) {}
  virtual ~OrderParameters();

  OrderParameters(const OrderParameters& from);
  OrderParameters(OrderParameters&& from) noexcept
    : OrderParameters() {
    *this = ::std::move(from);
  }

  inline OrderParameters& operator=(const OrderParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderParameters& operator=(OrderParameters&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OrderParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderParameters* internal_default_instance() {
    return reinterpret_cast<const OrderParameters*>(
               &_OrderParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(OrderParameters& a, OrderParameters& b) {
    a.Swap(&b);
  }
  inline void Swap(OrderParameters* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderParameters* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OrderParameters* New() const final {
    return CreateMaybeMessage<OrderParameters>(nullptr);
  }

  OrderParameters* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OrderParameters>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OrderParameters& from);
  void MergeFrom(const OrderParameters& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderParameters* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "lm.types.OrderParameters";
  }
  protected:
  explicit OrderParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_lm_2ftypes_2fOrderParameters_2eproto);
    return ::descriptor_table_lm_2ftypes_2fOrderParameters_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrderParameterFieldNumber = 1,
  };
  // repeated .lm.types.OrderParameter order_parameter = 1;
  int order_parameter_size() const;
  private:
  int _internal_order_parameter_size() const;
  public:
  void clear_order_parameter();
  ::lm::types::OrderParameter* mutable_order_parameter(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::types::OrderParameter >*
      mutable_order_parameter();
  private:
  const ::lm::types::OrderParameter& _internal_order_parameter(int index) const;
  ::lm::types::OrderParameter* _internal_add_order_parameter();
  public:
  const ::lm::types::OrderParameter& order_parameter(int index) const;
  ::lm::types::OrderParameter* add_order_parameter();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::types::OrderParameter >&
      order_parameter() const;

  // @@protoc_insertion_point(class_scope:lm.types.OrderParameters)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::types::OrderParameter > order_parameter_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_lm_2ftypes_2fOrderParameters_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OrderParameter

// required uint32 type = 1;
inline bool OrderParameter::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool OrderParameter::has_type() const {
  return _internal_has_type();
}
inline void OrderParameter::clear_type() {
  type_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 OrderParameter::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 OrderParameter::type() const {
  // @@protoc_insertion_point(field_get:lm.types.OrderParameter.type)
  return _internal_type();
}
inline void OrderParameter::_internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  type_ = value;
}
inline void OrderParameter::set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:lm.types.OrderParameter.type)
}

// repeated uint32 species_index = 2 [packed = true];
inline int OrderParameter::_internal_species_index_size() const {
  return species_index_.size();
}
inline int OrderParameter::species_index_size() const {
  return _internal_species_index_size();
}
inline void OrderParameter::clear_species_index() {
  species_index_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 OrderParameter::_internal_species_index(int index) const {
  return species_index_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 OrderParameter::species_index(int index) const {
  // @@protoc_insertion_point(field_get:lm.types.OrderParameter.species_index)
  return _internal_species_index(index);
}
inline void OrderParameter::set_species_index(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  species_index_.Set(index, value);
  // @@protoc_insertion_point(field_set:lm.types.OrderParameter.species_index)
}
inline void OrderParameter::_internal_add_species_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  species_index_.Add(value);
}
inline void OrderParameter::add_species_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_species_index(value);
  // @@protoc_insertion_point(field_add:lm.types.OrderParameter.species_index)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
OrderParameter::_internal_species_index() const {
  return species_index_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
OrderParameter::species_index() const {
  // @@protoc_insertion_point(field_list:lm.types.OrderParameter.species_index)
  return _internal_species_index();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
OrderParameter::_internal_mutable_species_index() {
  return &species_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
OrderParameter::mutable_species_index() {
  // @@protoc_insertion_point(field_mutable_list:lm.types.OrderParameter.species_index)
  return _internal_mutable_species_index();
}

// repeated double species_coefficient = 3 [packed = true];
inline int OrderParameter::_internal_species_coefficient_size() const {
  return species_coefficient_.size();
}
inline int OrderParameter::species_coefficient_size() const {
  return _internal_species_coefficient_size();
}
inline void OrderParameter::clear_species_coefficient() {
  species_coefficient_.Clear();
}
inline double OrderParameter::_internal_species_coefficient(int index) const {
  return species_coefficient_.Get(index);
}
inline double OrderParameter::species_coefficient(int index) const {
  // @@protoc_insertion_point(field_get:lm.types.OrderParameter.species_coefficient)
  return _internal_species_coefficient(index);
}
inline void OrderParameter::set_species_coefficient(int index, double value) {
  species_coefficient_.Set(index, value);
  // @@protoc_insertion_point(field_set:lm.types.OrderParameter.species_coefficient)
}
inline void OrderParameter::_internal_add_species_coefficient(double value) {
  species_coefficient_.Add(value);
}
inline void OrderParameter::add_species_coefficient(double value) {
  _internal_add_species_coefficient(value);
  // @@protoc_insertion_point(field_add:lm.types.OrderParameter.species_coefficient)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
OrderParameter::_internal_species_coefficient() const {
  return species_coefficient_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
OrderParameter::species_coefficient() const {
  // @@protoc_insertion_point(field_list:lm.types.OrderParameter.species_coefficient)
  return _internal_species_coefficient();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
OrderParameter::_internal_mutable_species_coefficient() {
  return &species_coefficient_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
OrderParameter::mutable_species_coefficient() {
  // @@protoc_insertion_point(field_mutable_list:lm.types.OrderParameter.species_coefficient)
  return _internal_mutable_species_coefficient();
}

// repeated double species_exponent = 4 [packed = true];
inline int OrderParameter::_internal_species_exponent_size() const {
  return species_exponent_.size();
}
inline int OrderParameter::species_exponent_size() const {
  return _internal_species_exponent_size();
}
inline void OrderParameter::clear_species_exponent() {
  species_exponent_.Clear();
}
inline double OrderParameter::_internal_species_exponent(int index) const {
  return species_exponent_.Get(index);
}
inline double OrderParameter::species_exponent(int index) const {
  // @@protoc_insertion_point(field_get:lm.types.OrderParameter.species_exponent)
  return _internal_species_exponent(index);
}
inline void OrderParameter::set_species_exponent(int index, double value) {
  species_exponent_.Set(index, value);
  // @@protoc_insertion_point(field_set:lm.types.OrderParameter.species_exponent)
}
inline void OrderParameter::_internal_add_species_exponent(double value) {
  species_exponent_.Add(value);
}
inline void OrderParameter::add_species_exponent(double value) {
  _internal_add_species_exponent(value);
  // @@protoc_insertion_point(field_add:lm.types.OrderParameter.species_exponent)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
OrderParameter::_internal_species_exponent() const {
  return species_exponent_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
OrderParameter::species_exponent() const {
  // @@protoc_insertion_point(field_list:lm.types.OrderParameter.species_exponent)
  return _internal_species_exponent();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
OrderParameter::_internal_mutable_species_exponent() {
  return &species_exponent_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
OrderParameter::mutable_species_exponent() {
  // @@protoc_insertion_point(field_mutable_list:lm.types.OrderParameter.species_exponent)
  return _internal_mutable_species_exponent();
}

// -------------------------------------------------------------------

// OrderParameters

// repeated .lm.types.OrderParameter order_parameter = 1;
inline int OrderParameters::_internal_order_parameter_size() const {
  return order_parameter_.size();
}
inline int OrderParameters::order_parameter_size() const {
  return _internal_order_parameter_size();
}
inline void OrderParameters::clear_order_parameter() {
  order_parameter_.Clear();
}
inline ::lm::types::OrderParameter* OrderParameters::mutable_order_parameter(int index) {
  // @@protoc_insertion_point(field_mutable:lm.types.OrderParameters.order_parameter)
  return order_parameter_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::types::OrderParameter >*
OrderParameters::mutable_order_parameter() {
  // @@protoc_insertion_point(field_mutable_list:lm.types.OrderParameters.order_parameter)
  return &order_parameter_;
}
inline const ::lm::types::OrderParameter& OrderParameters::_internal_order_parameter(int index) const {
  return order_parameter_.Get(index);
}
inline const ::lm::types::OrderParameter& OrderParameters::order_parameter(int index) const {
  // @@protoc_insertion_point(field_get:lm.types.OrderParameters.order_parameter)
  return _internal_order_parameter(index);
}
inline ::lm::types::OrderParameter* OrderParameters::_internal_add_order_parameter() {
  return order_parameter_.Add();
}
inline ::lm::types::OrderParameter* OrderParameters::add_order_parameter() {
  // @@protoc_insertion_point(field_add:lm.types.OrderParameters.order_parameter)
  return _internal_add_order_parameter();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::types::OrderParameter >&
OrderParameters::order_parameter() const {
  // @@protoc_insertion_point(field_list:lm.types.OrderParameters.order_parameter)
  return order_parameter_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace types
}  // namespace lm

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_lm_2ftypes_2fOrderParameters_2eproto
