// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lm/input/SpatialModel.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_lm_2finput_2fSpatialModel_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_lm_2finput_2fSpatialModel_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_lm_2finput_2fSpatialModel_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_lm_2finput_2fSpatialModel_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_lm_2finput_2fSpatialModel_2eproto;
namespace lm {
namespace input {
class SpatialModel;
class SpatialModelDefaultTypeInternal;
extern SpatialModelDefaultTypeInternal _SpatialModel_default_instance_;
class SpatialModel_Shape;
class SpatialModel_ShapeDefaultTypeInternal;
extern SpatialModel_ShapeDefaultTypeInternal _SpatialModel_Shape_default_instance_;
}  // namespace input
}  // namespace lm
PROTOBUF_NAMESPACE_OPEN
template<> ::lm::input::SpatialModel* Arena::CreateMaybeMessage<::lm::input::SpatialModel>(Arena*);
template<> ::lm::input::SpatialModel_Shape* Arena::CreateMaybeMessage<::lm::input::SpatialModel_Shape>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace lm {
namespace input {

// ===================================================================

class SpatialModel_Shape PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:lm.input.SpatialModel.Shape) */ {
 public:
  inline SpatialModel_Shape() : SpatialModel_Shape(nullptr) {}
  virtual ~SpatialModel_Shape();

  SpatialModel_Shape(const SpatialModel_Shape& from);
  SpatialModel_Shape(SpatialModel_Shape&& from) noexcept
    : SpatialModel_Shape() {
    *this = ::std::move(from);
  }

  inline SpatialModel_Shape& operator=(const SpatialModel_Shape& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpatialModel_Shape& operator=(SpatialModel_Shape&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SpatialModel_Shape& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SpatialModel_Shape* internal_default_instance() {
    return reinterpret_cast<const SpatialModel_Shape*>(
               &_SpatialModel_Shape_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SpatialModel_Shape& a, SpatialModel_Shape& b) {
    a.Swap(&b);
  }
  inline void Swap(SpatialModel_Shape* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpatialModel_Shape* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SpatialModel_Shape* New() const final {
    return CreateMaybeMessage<SpatialModel_Shape>(nullptr);
  }

  SpatialModel_Shape* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SpatialModel_Shape>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SpatialModel_Shape& from);
  void MergeFrom(const SpatialModel_Shape& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpatialModel_Shape* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "lm.input.SpatialModel.Shape";
  }
  protected:
  explicit SpatialModel_Shape(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_lm_2finput_2fSpatialModel_2eproto);
    return ::descriptor_table_lm_2finput_2fSpatialModel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShapeParameterFieldNumber = 3,
    kShapeFieldNumber = 1,
    kSiteTypeFieldNumber = 2,
  };
  // repeated double shape_parameter = 3 [packed = true];
  int shape_parameter_size() const;
  private:
  int _internal_shape_parameter_size() const;
  public:
  void clear_shape_parameter();
  private:
  double _internal_shape_parameter(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_shape_parameter() const;
  void _internal_add_shape_parameter(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_shape_parameter();
  public:
  double shape_parameter(int index) const;
  void set_shape_parameter(int index, double value);
  void add_shape_parameter(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      shape_parameter() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_shape_parameter();

  // required uint32 shape = 1;
  bool has_shape() const;
  private:
  bool _internal_has_shape() const;
  public:
  void clear_shape();
  ::PROTOBUF_NAMESPACE_ID::uint32 shape() const;
  void set_shape(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_shape() const;
  void _internal_set_shape(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 site_type = 2;
  bool has_site_type() const;
  private:
  bool _internal_has_site_type() const;
  public:
  void clear_site_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 site_type() const;
  void set_site_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_site_type() const;
  void _internal_set_site_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:lm.input.SpatialModel.Shape)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > shape_parameter_;
  mutable std::atomic<int> _shape_parameter_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 shape_;
  ::PROTOBUF_NAMESPACE_ID::uint32 site_type_;
  friend struct ::TableStruct_lm_2finput_2fSpatialModel_2eproto;
};
// -------------------------------------------------------------------

class SpatialModel PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:lm.input.SpatialModel) */ {
 public:
  inline SpatialModel() : SpatialModel(nullptr) {}
  virtual ~SpatialModel();

  SpatialModel(const SpatialModel& from);
  SpatialModel(SpatialModel&& from) noexcept
    : SpatialModel() {
    *this = ::std::move(from);
  }

  inline SpatialModel& operator=(const SpatialModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpatialModel& operator=(SpatialModel&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SpatialModel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SpatialModel* internal_default_instance() {
    return reinterpret_cast<const SpatialModel*>(
               &_SpatialModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SpatialModel& a, SpatialModel& b) {
    a.Swap(&b);
  }
  inline void Swap(SpatialModel* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpatialModel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SpatialModel* New() const final {
    return CreateMaybeMessage<SpatialModel>(nullptr);
  }

  SpatialModel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SpatialModel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SpatialModel& from);
  void MergeFrom(const SpatialModel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SpatialModel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "lm.input.SpatialModel";
  }
  protected:
  explicit SpatialModel(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_lm_2finput_2fSpatialModel_2eproto);
    return ::descriptor_table_lm_2finput_2fSpatialModel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef SpatialModel_Shape Shape;

  // accessors -------------------------------------------------------

  enum : int {
    kRegionFieldNumber = 1,
    kObstacleFieldNumber = 2,
  };
  // repeated .lm.input.SpatialModel.Shape region = 1;
  int region_size() const;
  private:
  int _internal_region_size() const;
  public:
  void clear_region();
  ::lm::input::SpatialModel_Shape* mutable_region(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::input::SpatialModel_Shape >*
      mutable_region();
  private:
  const ::lm::input::SpatialModel_Shape& _internal_region(int index) const;
  ::lm::input::SpatialModel_Shape* _internal_add_region();
  public:
  const ::lm::input::SpatialModel_Shape& region(int index) const;
  ::lm::input::SpatialModel_Shape* add_region();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::input::SpatialModel_Shape >&
      region() const;

  // repeated .lm.input.SpatialModel.Shape obstacle = 2;
  int obstacle_size() const;
  private:
  int _internal_obstacle_size() const;
  public:
  void clear_obstacle();
  ::lm::input::SpatialModel_Shape* mutable_obstacle(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::input::SpatialModel_Shape >*
      mutable_obstacle();
  private:
  const ::lm::input::SpatialModel_Shape& _internal_obstacle(int index) const;
  ::lm::input::SpatialModel_Shape* _internal_add_obstacle();
  public:
  const ::lm::input::SpatialModel_Shape& obstacle(int index) const;
  ::lm::input::SpatialModel_Shape* add_obstacle();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::input::SpatialModel_Shape >&
      obstacle() const;

  // @@protoc_insertion_point(class_scope:lm.input.SpatialModel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::input::SpatialModel_Shape > region_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::input::SpatialModel_Shape > obstacle_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_lm_2finput_2fSpatialModel_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SpatialModel_Shape

// required uint32 shape = 1;
inline bool SpatialModel_Shape::_internal_has_shape() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SpatialModel_Shape::has_shape() const {
  return _internal_has_shape();
}
inline void SpatialModel_Shape::clear_shape() {
  shape_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SpatialModel_Shape::_internal_shape() const {
  return shape_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SpatialModel_Shape::shape() const {
  // @@protoc_insertion_point(field_get:lm.input.SpatialModel.Shape.shape)
  return _internal_shape();
}
inline void SpatialModel_Shape::_internal_set_shape(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  shape_ = value;
}
inline void SpatialModel_Shape::set_shape(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_shape(value);
  // @@protoc_insertion_point(field_set:lm.input.SpatialModel.Shape.shape)
}

// required uint32 site_type = 2;
inline bool SpatialModel_Shape::_internal_has_site_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SpatialModel_Shape::has_site_type() const {
  return _internal_has_site_type();
}
inline void SpatialModel_Shape::clear_site_type() {
  site_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SpatialModel_Shape::_internal_site_type() const {
  return site_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SpatialModel_Shape::site_type() const {
  // @@protoc_insertion_point(field_get:lm.input.SpatialModel.Shape.site_type)
  return _internal_site_type();
}
inline void SpatialModel_Shape::_internal_set_site_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  site_type_ = value;
}
inline void SpatialModel_Shape::set_site_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_site_type(value);
  // @@protoc_insertion_point(field_set:lm.input.SpatialModel.Shape.site_type)
}

// repeated double shape_parameter = 3 [packed = true];
inline int SpatialModel_Shape::_internal_shape_parameter_size() const {
  return shape_parameter_.size();
}
inline int SpatialModel_Shape::shape_parameter_size() const {
  return _internal_shape_parameter_size();
}
inline void SpatialModel_Shape::clear_shape_parameter() {
  shape_parameter_.Clear();
}
inline double SpatialModel_Shape::_internal_shape_parameter(int index) const {
  return shape_parameter_.Get(index);
}
inline double SpatialModel_Shape::shape_parameter(int index) const {
  // @@protoc_insertion_point(field_get:lm.input.SpatialModel.Shape.shape_parameter)
  return _internal_shape_parameter(index);
}
inline void SpatialModel_Shape::set_shape_parameter(int index, double value) {
  shape_parameter_.Set(index, value);
  // @@protoc_insertion_point(field_set:lm.input.SpatialModel.Shape.shape_parameter)
}
inline void SpatialModel_Shape::_internal_add_shape_parameter(double value) {
  shape_parameter_.Add(value);
}
inline void SpatialModel_Shape::add_shape_parameter(double value) {
  _internal_add_shape_parameter(value);
  // @@protoc_insertion_point(field_add:lm.input.SpatialModel.Shape.shape_parameter)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
SpatialModel_Shape::_internal_shape_parameter() const {
  return shape_parameter_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
SpatialModel_Shape::shape_parameter() const {
  // @@protoc_insertion_point(field_list:lm.input.SpatialModel.Shape.shape_parameter)
  return _internal_shape_parameter();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
SpatialModel_Shape::_internal_mutable_shape_parameter() {
  return &shape_parameter_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
SpatialModel_Shape::mutable_shape_parameter() {
  // @@protoc_insertion_point(field_mutable_list:lm.input.SpatialModel.Shape.shape_parameter)
  return _internal_mutable_shape_parameter();
}

// -------------------------------------------------------------------

// SpatialModel

// repeated .lm.input.SpatialModel.Shape region = 1;
inline int SpatialModel::_internal_region_size() const {
  return region_.size();
}
inline int SpatialModel::region_size() const {
  return _internal_region_size();
}
inline void SpatialModel::clear_region() {
  region_.Clear();
}
inline ::lm::input::SpatialModel_Shape* SpatialModel::mutable_region(int index) {
  // @@protoc_insertion_point(field_mutable:lm.input.SpatialModel.region)
  return region_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::input::SpatialModel_Shape >*
SpatialModel::mutable_region() {
  // @@protoc_insertion_point(field_mutable_list:lm.input.SpatialModel.region)
  return &region_;
}
inline const ::lm::input::SpatialModel_Shape& SpatialModel::_internal_region(int index) const {
  return region_.Get(index);
}
inline const ::lm::input::SpatialModel_Shape& SpatialModel::region(int index) const {
  // @@protoc_insertion_point(field_get:lm.input.SpatialModel.region)
  return _internal_region(index);
}
inline ::lm::input::SpatialModel_Shape* SpatialModel::_internal_add_region() {
  return region_.Add();
}
inline ::lm::input::SpatialModel_Shape* SpatialModel::add_region() {
  // @@protoc_insertion_point(field_add:lm.input.SpatialModel.region)
  return _internal_add_region();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::input::SpatialModel_Shape >&
SpatialModel::region() const {
  // @@protoc_insertion_point(field_list:lm.input.SpatialModel.region)
  return region_;
}

// repeated .lm.input.SpatialModel.Shape obstacle = 2;
inline int SpatialModel::_internal_obstacle_size() const {
  return obstacle_.size();
}
inline int SpatialModel::obstacle_size() const {
  return _internal_obstacle_size();
}
inline void SpatialModel::clear_obstacle() {
  obstacle_.Clear();
}
inline ::lm::input::SpatialModel_Shape* SpatialModel::mutable_obstacle(int index) {
  // @@protoc_insertion_point(field_mutable:lm.input.SpatialModel.obstacle)
  return obstacle_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::input::SpatialModel_Shape >*
SpatialModel::mutable_obstacle() {
  // @@protoc_insertion_point(field_mutable_list:lm.input.SpatialModel.obstacle)
  return &obstacle_;
}
inline const ::lm::input::SpatialModel_Shape& SpatialModel::_internal_obstacle(int index) const {
  return obstacle_.Get(index);
}
inline const ::lm::input::SpatialModel_Shape& SpatialModel::obstacle(int index) const {
  // @@protoc_insertion_point(field_get:lm.input.SpatialModel.obstacle)
  return _internal_obstacle(index);
}
inline ::lm::input::SpatialModel_Shape* SpatialModel::_internal_add_obstacle() {
  return obstacle_.Add();
}
inline ::lm::input::SpatialModel_Shape* SpatialModel::add_obstacle() {
  // @@protoc_insertion_point(field_add:lm.input.SpatialModel.obstacle)
  return _internal_add_obstacle();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::input::SpatialModel_Shape >&
SpatialModel::obstacle() const {
  // @@protoc_insertion_point(field_list:lm.input.SpatialModel.obstacle)
  return obstacle_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace input
}  // namespace lm

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_lm_2finput_2fSpatialModel_2eproto
