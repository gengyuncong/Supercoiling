// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lm/message/ProcessAggregatedOutput.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_lm_2fmessage_2fProcessAggregatedOutput_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_lm_2fmessage_2fProcessAggregatedOutput_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "lm/io/ffpilot/FFPilotOutput.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_lm_2fmessage_2fProcessAggregatedOutput_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_lm_2fmessage_2fProcessAggregatedOutput_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_lm_2fmessage_2fProcessAggregatedOutput_2eproto;
namespace lm {
namespace message {
class ProcessAggregatedOutput;
class ProcessAggregatedOutputDefaultTypeInternal;
extern ProcessAggregatedOutputDefaultTypeInternal _ProcessAggregatedOutput_default_instance_;
}  // namespace message
}  // namespace lm
PROTOBUF_NAMESPACE_OPEN
template<> ::lm::message::ProcessAggregatedOutput* Arena::CreateMaybeMessage<::lm::message::ProcessAggregatedOutput>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace lm {
namespace message {

// ===================================================================

class ProcessAggregatedOutput PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:lm.message.ProcessAggregatedOutput) */ {
 public:
  inline ProcessAggregatedOutput() : ProcessAggregatedOutput(nullptr) {}
  virtual ~ProcessAggregatedOutput();

  ProcessAggregatedOutput(const ProcessAggregatedOutput& from);
  ProcessAggregatedOutput(ProcessAggregatedOutput&& from) noexcept
    : ProcessAggregatedOutput() {
    *this = ::std::move(from);
  }

  inline ProcessAggregatedOutput& operator=(const ProcessAggregatedOutput& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcessAggregatedOutput& operator=(ProcessAggregatedOutput&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProcessAggregatedOutput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcessAggregatedOutput* internal_default_instance() {
    return reinterpret_cast<const ProcessAggregatedOutput*>(
               &_ProcessAggregatedOutput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ProcessAggregatedOutput& a, ProcessAggregatedOutput& b) {
    a.Swap(&b);
  }
  inline void Swap(ProcessAggregatedOutput* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProcessAggregatedOutput* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProcessAggregatedOutput* New() const final {
    return CreateMaybeMessage<ProcessAggregatedOutput>(nullptr);
  }

  ProcessAggregatedOutput* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProcessAggregatedOutput>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProcessAggregatedOutput& from);
  void MergeFrom(const ProcessAggregatedOutput& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProcessAggregatedOutput* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "lm.message.ProcessAggregatedOutput";
  }
  protected:
  explicit ProcessAggregatedOutput(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_lm_2fmessage_2fProcessAggregatedOutput_2eproto);
    return ::descriptor_table_lm_2fmessage_2fProcessAggregatedOutput_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRecordNamePrefixFieldNumber = 2,
    kFfpilotOutputFieldNumber = 100,
  };
  // optional string record_name_prefix = 2 [default = ""];
  bool has_record_name_prefix() const;
  private:
  bool _internal_has_record_name_prefix() const;
  public:
  void clear_record_name_prefix();
  const std::string& record_name_prefix() const;
  void set_record_name_prefix(const std::string& value);
  void set_record_name_prefix(std::string&& value);
  void set_record_name_prefix(const char* value);
  void set_record_name_prefix(const char* value, size_t size);
  std::string* mutable_record_name_prefix();
  std::string* release_record_name_prefix();
  void set_allocated_record_name_prefix(std::string* record_name_prefix);
  private:
  const std::string& _internal_record_name_prefix() const;
  void _internal_set_record_name_prefix(const std::string& value);
  std::string* _internal_mutable_record_name_prefix();
  public:

  // optional .lm.io.ffpilot.FFPilotOutput ffpilot_output = 100;
  bool has_ffpilot_output() const;
  private:
  bool _internal_has_ffpilot_output() const;
  public:
  void clear_ffpilot_output();
  const ::lm::io::ffpilot::FFPilotOutput& ffpilot_output() const;
  ::lm::io::ffpilot::FFPilotOutput* release_ffpilot_output();
  ::lm::io::ffpilot::FFPilotOutput* mutable_ffpilot_output();
  void set_allocated_ffpilot_output(::lm::io::ffpilot::FFPilotOutput* ffpilot_output);
  private:
  const ::lm::io::ffpilot::FFPilotOutput& _internal_ffpilot_output() const;
  ::lm::io::ffpilot::FFPilotOutput* _internal_mutable_ffpilot_output();
  public:
  void unsafe_arena_set_allocated_ffpilot_output(
      ::lm::io::ffpilot::FFPilotOutput* ffpilot_output);
  ::lm::io::ffpilot::FFPilotOutput* unsafe_arena_release_ffpilot_output();

  // @@protoc_insertion_point(class_scope:lm.message.ProcessAggregatedOutput)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr record_name_prefix_;
  ::lm::io::ffpilot::FFPilotOutput* ffpilot_output_;
  friend struct ::TableStruct_lm_2fmessage_2fProcessAggregatedOutput_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProcessAggregatedOutput

// optional string record_name_prefix = 2 [default = ""];
inline bool ProcessAggregatedOutput::_internal_has_record_name_prefix() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProcessAggregatedOutput::has_record_name_prefix() const {
  return _internal_has_record_name_prefix();
}
inline void ProcessAggregatedOutput::clear_record_name_prefix() {
  record_name_prefix_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProcessAggregatedOutput::record_name_prefix() const {
  // @@protoc_insertion_point(field_get:lm.message.ProcessAggregatedOutput.record_name_prefix)
  return _internal_record_name_prefix();
}
inline void ProcessAggregatedOutput::set_record_name_prefix(const std::string& value) {
  _internal_set_record_name_prefix(value);
  // @@protoc_insertion_point(field_set:lm.message.ProcessAggregatedOutput.record_name_prefix)
}
inline std::string* ProcessAggregatedOutput::mutable_record_name_prefix() {
  // @@protoc_insertion_point(field_mutable:lm.message.ProcessAggregatedOutput.record_name_prefix)
  return _internal_mutable_record_name_prefix();
}
inline const std::string& ProcessAggregatedOutput::_internal_record_name_prefix() const {
  return record_name_prefix_.Get();
}
inline void ProcessAggregatedOutput::_internal_set_record_name_prefix(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  record_name_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ProcessAggregatedOutput::set_record_name_prefix(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  record_name_prefix_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:lm.message.ProcessAggregatedOutput.record_name_prefix)
}
inline void ProcessAggregatedOutput::set_record_name_prefix(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  record_name_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:lm.message.ProcessAggregatedOutput.record_name_prefix)
}
inline void ProcessAggregatedOutput::set_record_name_prefix(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  record_name_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:lm.message.ProcessAggregatedOutput.record_name_prefix)
}
inline std::string* ProcessAggregatedOutput::_internal_mutable_record_name_prefix() {
  _has_bits_[0] |= 0x00000001u;
  return record_name_prefix_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ProcessAggregatedOutput::release_record_name_prefix() {
  // @@protoc_insertion_point(field_release:lm.message.ProcessAggregatedOutput.record_name_prefix)
  if (!_internal_has_record_name_prefix()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return record_name_prefix_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProcessAggregatedOutput::set_allocated_record_name_prefix(std::string* record_name_prefix) {
  if (record_name_prefix != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  record_name_prefix_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), record_name_prefix,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:lm.message.ProcessAggregatedOutput.record_name_prefix)
}

// optional .lm.io.ffpilot.FFPilotOutput ffpilot_output = 100;
inline bool ProcessAggregatedOutput::_internal_has_ffpilot_output() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || ffpilot_output_ != nullptr);
  return value;
}
inline bool ProcessAggregatedOutput::has_ffpilot_output() const {
  return _internal_has_ffpilot_output();
}
inline const ::lm::io::ffpilot::FFPilotOutput& ProcessAggregatedOutput::_internal_ffpilot_output() const {
  const ::lm::io::ffpilot::FFPilotOutput* p = ffpilot_output_;
  return p != nullptr ? *p : *reinterpret_cast<const ::lm::io::ffpilot::FFPilotOutput*>(
      &::lm::io::ffpilot::_FFPilotOutput_default_instance_);
}
inline const ::lm::io::ffpilot::FFPilotOutput& ProcessAggregatedOutput::ffpilot_output() const {
  // @@protoc_insertion_point(field_get:lm.message.ProcessAggregatedOutput.ffpilot_output)
  return _internal_ffpilot_output();
}
inline void ProcessAggregatedOutput::unsafe_arena_set_allocated_ffpilot_output(
    ::lm::io::ffpilot::FFPilotOutput* ffpilot_output) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ffpilot_output_);
  }
  ffpilot_output_ = ffpilot_output;
  if (ffpilot_output) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lm.message.ProcessAggregatedOutput.ffpilot_output)
}
inline ::lm::io::ffpilot::FFPilotOutput* ProcessAggregatedOutput::release_ffpilot_output() {
  _has_bits_[0] &= ~0x00000002u;
  ::lm::io::ffpilot::FFPilotOutput* temp = ffpilot_output_;
  ffpilot_output_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::lm::io::ffpilot::FFPilotOutput* ProcessAggregatedOutput::unsafe_arena_release_ffpilot_output() {
  // @@protoc_insertion_point(field_release:lm.message.ProcessAggregatedOutput.ffpilot_output)
  _has_bits_[0] &= ~0x00000002u;
  ::lm::io::ffpilot::FFPilotOutput* temp = ffpilot_output_;
  ffpilot_output_ = nullptr;
  return temp;
}
inline ::lm::io::ffpilot::FFPilotOutput* ProcessAggregatedOutput::_internal_mutable_ffpilot_output() {
  _has_bits_[0] |= 0x00000002u;
  if (ffpilot_output_ == nullptr) {
    auto* p = CreateMaybeMessage<::lm::io::ffpilot::FFPilotOutput>(GetArena());
    ffpilot_output_ = p;
  }
  return ffpilot_output_;
}
inline ::lm::io::ffpilot::FFPilotOutput* ProcessAggregatedOutput::mutable_ffpilot_output() {
  // @@protoc_insertion_point(field_mutable:lm.message.ProcessAggregatedOutput.ffpilot_output)
  return _internal_mutable_ffpilot_output();
}
inline void ProcessAggregatedOutput::set_allocated_ffpilot_output(::lm::io::ffpilot::FFPilotOutput* ffpilot_output) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ffpilot_output_);
  }
  if (ffpilot_output) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ffpilot_output)->GetArena();
    if (message_arena != submessage_arena) {
      ffpilot_output = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ffpilot_output, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  ffpilot_output_ = ffpilot_output;
  // @@protoc_insertion_point(field_set_allocated:lm.message.ProcessAggregatedOutput.ffpilot_output)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace lm

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_lm_2fmessage_2fProcessAggregatedOutput_2eproto
