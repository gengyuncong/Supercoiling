// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lm/message/ProcessAggregatedOutput.proto

#include "lm/message/ProcessAggregatedOutput.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_lm_2fio_2fffpilot_2fFFPilotOutput_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FFPilotOutput_lm_2fio_2fffpilot_2fFFPilotOutput_2eproto;
namespace lm {
namespace message {
class ProcessAggregatedOutputDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProcessAggregatedOutput> _instance;
} _ProcessAggregatedOutput_default_instance_;
}  // namespace message
}  // namespace lm
static void InitDefaultsscc_info_ProcessAggregatedOutput_lm_2fmessage_2fProcessAggregatedOutput_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::lm::message::_ProcessAggregatedOutput_default_instance_;
    new (ptr) ::lm::message::ProcessAggregatedOutput();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lm::message::ProcessAggregatedOutput::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProcessAggregatedOutput_lm_2fmessage_2fProcessAggregatedOutput_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProcessAggregatedOutput_lm_2fmessage_2fProcessAggregatedOutput_2eproto}, {
      &scc_info_FFPilotOutput_lm_2fio_2fffpilot_2fFFPilotOutput_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_lm_2fmessage_2fProcessAggregatedOutput_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_lm_2fmessage_2fProcessAggregatedOutput_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_lm_2fmessage_2fProcessAggregatedOutput_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_lm_2fmessage_2fProcessAggregatedOutput_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::lm::message::ProcessAggregatedOutput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::lm::message::ProcessAggregatedOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::lm::message::ProcessAggregatedOutput, record_name_prefix_),
  PROTOBUF_FIELD_OFFSET(::lm::message::ProcessAggregatedOutput, ffpilot_output_),
  0,
  1,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::lm::message::ProcessAggregatedOutput)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::lm::message::_ProcessAggregatedOutput_default_instance_),
};

const char descriptor_table_protodef_lm_2fmessage_2fProcessAggregatedOutput_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n(lm/message/ProcessAggregatedOutput.pro"
  "to\022\nlm.message\032!lm/io/ffpilot/FFPilotOut"
  "put.proto\"m\n\027ProcessAggregatedOutput\022\034\n\022"
  "record_name_prefix\030\002 \001(\t:\000\0224\n\016ffpilot_ou"
  "tput\030d \001(\0132\034.lm.io.ffpilot.FFPilotOutput"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_lm_2fmessage_2fProcessAggregatedOutput_2eproto_deps[1] = {
  &::descriptor_table_lm_2fio_2fffpilot_2fFFPilotOutput_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_lm_2fmessage_2fProcessAggregatedOutput_2eproto_sccs[1] = {
  &scc_info_ProcessAggregatedOutput_lm_2fmessage_2fProcessAggregatedOutput_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_lm_2fmessage_2fProcessAggregatedOutput_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_lm_2fmessage_2fProcessAggregatedOutput_2eproto = {
  false, false, descriptor_table_protodef_lm_2fmessage_2fProcessAggregatedOutput_2eproto, "lm/message/ProcessAggregatedOutput.proto", 200,
  &descriptor_table_lm_2fmessage_2fProcessAggregatedOutput_2eproto_once, descriptor_table_lm_2fmessage_2fProcessAggregatedOutput_2eproto_sccs, descriptor_table_lm_2fmessage_2fProcessAggregatedOutput_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_lm_2fmessage_2fProcessAggregatedOutput_2eproto::offsets,
  file_level_metadata_lm_2fmessage_2fProcessAggregatedOutput_2eproto, 1, file_level_enum_descriptors_lm_2fmessage_2fProcessAggregatedOutput_2eproto, file_level_service_descriptors_lm_2fmessage_2fProcessAggregatedOutput_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_lm_2fmessage_2fProcessAggregatedOutput_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_lm_2fmessage_2fProcessAggregatedOutput_2eproto)), true);
namespace lm {
namespace message {

// ===================================================================

void ProcessAggregatedOutput::InitAsDefaultInstance() {
  ::lm::message::_ProcessAggregatedOutput_default_instance_._instance.get_mutable()->ffpilot_output_ = const_cast< ::lm::io::ffpilot::FFPilotOutput*>(
      ::lm::io::ffpilot::FFPilotOutput::internal_default_instance());
}
class ProcessAggregatedOutput::_Internal {
 public:
  using HasBits = decltype(std::declval<ProcessAggregatedOutput>()._has_bits_);
  static void set_has_record_name_prefix(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::lm::io::ffpilot::FFPilotOutput& ffpilot_output(const ProcessAggregatedOutput* msg);
  static void set_has_ffpilot_output(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::lm::io::ffpilot::FFPilotOutput&
ProcessAggregatedOutput::_Internal::ffpilot_output(const ProcessAggregatedOutput* msg) {
  return *msg->ffpilot_output_;
}
void ProcessAggregatedOutput::clear_ffpilot_output() {
  if (ffpilot_output_ != nullptr) ffpilot_output_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
ProcessAggregatedOutput::ProcessAggregatedOutput(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:lm.message.ProcessAggregatedOutput)
}
ProcessAggregatedOutput::ProcessAggregatedOutput(const ProcessAggregatedOutput& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  record_name_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_record_name_prefix()) {
    record_name_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_record_name_prefix(),
      GetArena());
  }
  if (from._internal_has_ffpilot_output()) {
    ffpilot_output_ = new ::lm::io::ffpilot::FFPilotOutput(*from.ffpilot_output_);
  } else {
    ffpilot_output_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:lm.message.ProcessAggregatedOutput)
}

void ProcessAggregatedOutput::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProcessAggregatedOutput_lm_2fmessage_2fProcessAggregatedOutput_2eproto.base);
  record_name_prefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ffpilot_output_ = nullptr;
}

ProcessAggregatedOutput::~ProcessAggregatedOutput() {
  // @@protoc_insertion_point(destructor:lm.message.ProcessAggregatedOutput)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProcessAggregatedOutput::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  record_name_prefix_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ffpilot_output_;
}

void ProcessAggregatedOutput::ArenaDtor(void* object) {
  ProcessAggregatedOutput* _this = reinterpret_cast< ProcessAggregatedOutput* >(object);
  (void)_this;
}
void ProcessAggregatedOutput::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProcessAggregatedOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProcessAggregatedOutput& ProcessAggregatedOutput::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProcessAggregatedOutput_lm_2fmessage_2fProcessAggregatedOutput_2eproto.base);
  return *internal_default_instance();
}


void ProcessAggregatedOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:lm.message.ProcessAggregatedOutput)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      record_name_prefix_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(ffpilot_output_ != nullptr);
      ffpilot_output_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProcessAggregatedOutput::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string record_name_prefix = 2 [default = ""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_record_name_prefix();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "lm.message.ProcessAggregatedOutput.record_name_prefix");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .lm.io.ffpilot.FFPilotOutput ffpilot_output = 100;
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_ffpilot_output(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProcessAggregatedOutput::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:lm.message.ProcessAggregatedOutput)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string record_name_prefix = 2 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_record_name_prefix().data(), static_cast<int>(this->_internal_record_name_prefix().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "lm.message.ProcessAggregatedOutput.record_name_prefix");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_record_name_prefix(), target);
  }

  // optional .lm.io.ffpilot.FFPilotOutput ffpilot_output = 100;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        100, _Internal::ffpilot_output(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lm.message.ProcessAggregatedOutput)
  return target;
}

size_t ProcessAggregatedOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lm.message.ProcessAggregatedOutput)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string record_name_prefix = 2 [default = ""];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_record_name_prefix());
    }

    // optional .lm.io.ffpilot.FFPilotOutput ffpilot_output = 100;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ffpilot_output_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcessAggregatedOutput::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lm.message.ProcessAggregatedOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessAggregatedOutput* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProcessAggregatedOutput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lm.message.ProcessAggregatedOutput)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lm.message.ProcessAggregatedOutput)
    MergeFrom(*source);
  }
}

void ProcessAggregatedOutput::MergeFrom(const ProcessAggregatedOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lm.message.ProcessAggregatedOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_record_name_prefix(from._internal_record_name_prefix());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_ffpilot_output()->::lm::io::ffpilot::FFPilotOutput::MergeFrom(from._internal_ffpilot_output());
    }
  }
}

void ProcessAggregatedOutput::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lm.message.ProcessAggregatedOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessAggregatedOutput::CopyFrom(const ProcessAggregatedOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lm.message.ProcessAggregatedOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessAggregatedOutput::IsInitialized() const {
  if (_internal_has_ffpilot_output()) {
    if (!ffpilot_output_->IsInitialized()) return false;
  }
  return true;
}

void ProcessAggregatedOutput::InternalSwap(ProcessAggregatedOutput* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  record_name_prefix_.Swap(&other->record_name_prefix_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(ffpilot_output_, other->ffpilot_output_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcessAggregatedOutput::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace message
}  // namespace lm
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::lm::message::ProcessAggregatedOutput* Arena::CreateMaybeMessage< ::lm::message::ProcessAggregatedOutput >(Arena* arena) {
  return Arena::CreateMessageInternal< ::lm::message::ProcessAggregatedOutput >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
