// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lm/message/WorkUnitOutput.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_lm_2fmessage_2fWorkUnitOutput_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_lm_2fmessage_2fWorkUnitOutput_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "lm/io/BarrierCrossingTimes.pb.h"
#include "lm/io/ConcentrationsTimeSeries.pb.h"
#include "lm/io/DegreeAdvancementTimeSeries.pb.h"
#include "lm/io/FirstPassageTimes.pb.h"
#include "lm/io/OrderParameterFirstPassageTimes.pb.h"
#include "lm/io/LatticeTimeSeries.pb.h"
#include "lm/io/OrderParameterTimeSeries.pb.h"
#include "lm/io/SpeciesCounts.pb.h"
#include "lm/io/SpeciesTimeSeries.pb.h"
#include "lm/io/StochasticProcessTimeSeries.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_lm_2fmessage_2fWorkUnitOutput_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_lm_2fmessage_2fWorkUnitOutput_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_lm_2fmessage_2fWorkUnitOutput_2eproto;
namespace lm {
namespace message {
class WorkUnitOutput;
class WorkUnitOutputDefaultTypeInternal;
extern WorkUnitOutputDefaultTypeInternal _WorkUnitOutput_default_instance_;
}  // namespace message
}  // namespace lm
PROTOBUF_NAMESPACE_OPEN
template<> ::lm::message::WorkUnitOutput* Arena::CreateMaybeMessage<::lm::message::WorkUnitOutput>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace lm {
namespace message {

// ===================================================================

class WorkUnitOutput PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:lm.message.WorkUnitOutput) */ {
 public:
  inline WorkUnitOutput() : WorkUnitOutput(nullptr) {}
  virtual ~WorkUnitOutput();

  WorkUnitOutput(const WorkUnitOutput& from);
  WorkUnitOutput(WorkUnitOutput&& from) noexcept
    : WorkUnitOutput() {
    *this = ::std::move(from);
  }

  inline WorkUnitOutput& operator=(const WorkUnitOutput& from) {
    CopyFrom(from);
    return *this;
  }
  inline WorkUnitOutput& operator=(WorkUnitOutput&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const WorkUnitOutput& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkUnitOutput* internal_default_instance() {
    return reinterpret_cast<const WorkUnitOutput*>(
               &_WorkUnitOutput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(WorkUnitOutput& a, WorkUnitOutput& b) {
    a.Swap(&b);
  }
  inline void Swap(WorkUnitOutput* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WorkUnitOutput* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline WorkUnitOutput* New() const final {
    return CreateMaybeMessage<WorkUnitOutput>(nullptr);
  }

  WorkUnitOutput* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<WorkUnitOutput>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const WorkUnitOutput& from);
  void MergeFrom(const WorkUnitOutput& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorkUnitOutput* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "lm.message.WorkUnitOutput";
  }
  protected:
  explicit WorkUnitOutput(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_lm_2fmessage_2fWorkUnitOutput_2eproto);
    return ::descriptor_table_lm_2fmessage_2fWorkUnitOutput_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBarrierCrossingTimesFieldNumber = 20,
    kFirstPassageTimesFieldNumber = 21,
    kOrderParameterFirstPassageTimesFieldNumber = 22,
    kRecordNamePrefixFieldNumber = 2,
    kConcentrationsTimeSeriesFieldNumber = 11,
    kDegreeAdvancementTimeSeriesFieldNumber = 12,
    kLatticeTimeSeriesFieldNumber = 13,
    kOrderParameterTimeSeriesFieldNumber = 14,
    kSpeciesTimeSeriesFieldNumber = 16,
    kStochasticProcessTimeSeriesFieldNumber = 17,
    kHasOutputFieldNumber = 1,
    kCondenseOutputFieldNumber = 3,
  };
  // repeated .lm.io.BarrierCrossingTimes barrier_crossing_times = 20;
  int barrier_crossing_times_size() const;
  private:
  int _internal_barrier_crossing_times_size() const;
  public:
  void clear_barrier_crossing_times();
  ::lm::io::BarrierCrossingTimes* mutable_barrier_crossing_times(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::io::BarrierCrossingTimes >*
      mutable_barrier_crossing_times();
  private:
  const ::lm::io::BarrierCrossingTimes& _internal_barrier_crossing_times(int index) const;
  ::lm::io::BarrierCrossingTimes* _internal_add_barrier_crossing_times();
  public:
  const ::lm::io::BarrierCrossingTimes& barrier_crossing_times(int index) const;
  ::lm::io::BarrierCrossingTimes* add_barrier_crossing_times();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::io::BarrierCrossingTimes >&
      barrier_crossing_times() const;

  // repeated .lm.io.FirstPassageTimes first_passage_times = 21;
  int first_passage_times_size() const;
  private:
  int _internal_first_passage_times_size() const;
  public:
  void clear_first_passage_times();
  ::lm::io::FirstPassageTimes* mutable_first_passage_times(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::io::FirstPassageTimes >*
      mutable_first_passage_times();
  private:
  const ::lm::io::FirstPassageTimes& _internal_first_passage_times(int index) const;
  ::lm::io::FirstPassageTimes* _internal_add_first_passage_times();
  public:
  const ::lm::io::FirstPassageTimes& first_passage_times(int index) const;
  ::lm::io::FirstPassageTimes* add_first_passage_times();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::io::FirstPassageTimes >&
      first_passage_times() const;

  // repeated .lm.io.OrderParameterFirstPassageTimes order_parameter_first_passage_times = 22;
  int order_parameter_first_passage_times_size() const;
  private:
  int _internal_order_parameter_first_passage_times_size() const;
  public:
  void clear_order_parameter_first_passage_times();
  ::lm::io::OrderParameterFirstPassageTimes* mutable_order_parameter_first_passage_times(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::io::OrderParameterFirstPassageTimes >*
      mutable_order_parameter_first_passage_times();
  private:
  const ::lm::io::OrderParameterFirstPassageTimes& _internal_order_parameter_first_passage_times(int index) const;
  ::lm::io::OrderParameterFirstPassageTimes* _internal_add_order_parameter_first_passage_times();
  public:
  const ::lm::io::OrderParameterFirstPassageTimes& order_parameter_first_passage_times(int index) const;
  ::lm::io::OrderParameterFirstPassageTimes* add_order_parameter_first_passage_times();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::io::OrderParameterFirstPassageTimes >&
      order_parameter_first_passage_times() const;

  // optional string record_name_prefix = 2;
  bool has_record_name_prefix() const;
  private:
  bool _internal_has_record_name_prefix() const;
  public:
  void clear_record_name_prefix();
  const std::string& record_name_prefix() const;
  void set_record_name_prefix(const std::string& value);
  void set_record_name_prefix(std::string&& value);
  void set_record_name_prefix(const char* value);
  void set_record_name_prefix(const char* value, size_t size);
  std::string* mutable_record_name_prefix();
  std::string* release_record_name_prefix();
  void set_allocated_record_name_prefix(std::string* record_name_prefix);
  private:
  const std::string& _internal_record_name_prefix() const;
  void _internal_set_record_name_prefix(const std::string& value);
  std::string* _internal_mutable_record_name_prefix();
  public:

  // optional .lm.io.ConcentrationsTimeSeries concentrations_time_series = 11;
  bool has_concentrations_time_series() const;
  private:
  bool _internal_has_concentrations_time_series() const;
  public:
  void clear_concentrations_time_series();
  const ::lm::io::ConcentrationsTimeSeries& concentrations_time_series() const;
  ::lm::io::ConcentrationsTimeSeries* release_concentrations_time_series();
  ::lm::io::ConcentrationsTimeSeries* mutable_concentrations_time_series();
  void set_allocated_concentrations_time_series(::lm::io::ConcentrationsTimeSeries* concentrations_time_series);
  private:
  const ::lm::io::ConcentrationsTimeSeries& _internal_concentrations_time_series() const;
  ::lm::io::ConcentrationsTimeSeries* _internal_mutable_concentrations_time_series();
  public:
  void unsafe_arena_set_allocated_concentrations_time_series(
      ::lm::io::ConcentrationsTimeSeries* concentrations_time_series);
  ::lm::io::ConcentrationsTimeSeries* unsafe_arena_release_concentrations_time_series();

  // optional .lm.io.DegreeAdvancementTimeSeries degree_advancement_time_series = 12;
  bool has_degree_advancement_time_series() const;
  private:
  bool _internal_has_degree_advancement_time_series() const;
  public:
  void clear_degree_advancement_time_series();
  const ::lm::io::DegreeAdvancementTimeSeries& degree_advancement_time_series() const;
  ::lm::io::DegreeAdvancementTimeSeries* release_degree_advancement_time_series();
  ::lm::io::DegreeAdvancementTimeSeries* mutable_degree_advancement_time_series();
  void set_allocated_degree_advancement_time_series(::lm::io::DegreeAdvancementTimeSeries* degree_advancement_time_series);
  private:
  const ::lm::io::DegreeAdvancementTimeSeries& _internal_degree_advancement_time_series() const;
  ::lm::io::DegreeAdvancementTimeSeries* _internal_mutable_degree_advancement_time_series();
  public:
  void unsafe_arena_set_allocated_degree_advancement_time_series(
      ::lm::io::DegreeAdvancementTimeSeries* degree_advancement_time_series);
  ::lm::io::DegreeAdvancementTimeSeries* unsafe_arena_release_degree_advancement_time_series();

  // optional .lm.io.LatticeTimeSeries lattice_time_series = 13;
  bool has_lattice_time_series() const;
  private:
  bool _internal_has_lattice_time_series() const;
  public:
  void clear_lattice_time_series();
  const ::lm::io::LatticeTimeSeries& lattice_time_series() const;
  ::lm::io::LatticeTimeSeries* release_lattice_time_series();
  ::lm::io::LatticeTimeSeries* mutable_lattice_time_series();
  void set_allocated_lattice_time_series(::lm::io::LatticeTimeSeries* lattice_time_series);
  private:
  const ::lm::io::LatticeTimeSeries& _internal_lattice_time_series() const;
  ::lm::io::LatticeTimeSeries* _internal_mutable_lattice_time_series();
  public:
  void unsafe_arena_set_allocated_lattice_time_series(
      ::lm::io::LatticeTimeSeries* lattice_time_series);
  ::lm::io::LatticeTimeSeries* unsafe_arena_release_lattice_time_series();

  // optional .lm.io.OrderParameterTimeSeries order_parameter_time_series = 14;
  bool has_order_parameter_time_series() const;
  private:
  bool _internal_has_order_parameter_time_series() const;
  public:
  void clear_order_parameter_time_series();
  const ::lm::io::OrderParameterTimeSeries& order_parameter_time_series() const;
  ::lm::io::OrderParameterTimeSeries* release_order_parameter_time_series();
  ::lm::io::OrderParameterTimeSeries* mutable_order_parameter_time_series();
  void set_allocated_order_parameter_time_series(::lm::io::OrderParameterTimeSeries* order_parameter_time_series);
  private:
  const ::lm::io::OrderParameterTimeSeries& _internal_order_parameter_time_series() const;
  ::lm::io::OrderParameterTimeSeries* _internal_mutable_order_parameter_time_series();
  public:
  void unsafe_arena_set_allocated_order_parameter_time_series(
      ::lm::io::OrderParameterTimeSeries* order_parameter_time_series);
  ::lm::io::OrderParameterTimeSeries* unsafe_arena_release_order_parameter_time_series();

  // optional .lm.io.SpeciesTimeSeries species_time_series = 16;
  bool has_species_time_series() const;
  private:
  bool _internal_has_species_time_series() const;
  public:
  void clear_species_time_series();
  const ::lm::io::SpeciesTimeSeries& species_time_series() const;
  ::lm::io::SpeciesTimeSeries* release_species_time_series();
  ::lm::io::SpeciesTimeSeries* mutable_species_time_series();
  void set_allocated_species_time_series(::lm::io::SpeciesTimeSeries* species_time_series);
  private:
  const ::lm::io::SpeciesTimeSeries& _internal_species_time_series() const;
  ::lm::io::SpeciesTimeSeries* _internal_mutable_species_time_series();
  public:
  void unsafe_arena_set_allocated_species_time_series(
      ::lm::io::SpeciesTimeSeries* species_time_series);
  ::lm::io::SpeciesTimeSeries* unsafe_arena_release_species_time_series();

  // optional .lm.io.StochasticProcessTimeSeries stochastic_process_time_series = 17;
  bool has_stochastic_process_time_series() const;
  private:
  bool _internal_has_stochastic_process_time_series() const;
  public:
  void clear_stochastic_process_time_series();
  const ::lm::io::StochasticProcessTimeSeries& stochastic_process_time_series() const;
  ::lm::io::StochasticProcessTimeSeries* release_stochastic_process_time_series();
  ::lm::io::StochasticProcessTimeSeries* mutable_stochastic_process_time_series();
  void set_allocated_stochastic_process_time_series(::lm::io::StochasticProcessTimeSeries* stochastic_process_time_series);
  private:
  const ::lm::io::StochasticProcessTimeSeries& _internal_stochastic_process_time_series() const;
  ::lm::io::StochasticProcessTimeSeries* _internal_mutable_stochastic_process_time_series();
  public:
  void unsafe_arena_set_allocated_stochastic_process_time_series(
      ::lm::io::StochasticProcessTimeSeries* stochastic_process_time_series);
  ::lm::io::StochasticProcessTimeSeries* unsafe_arena_release_stochastic_process_time_series();

  // optional bool has_output = 1 [default = false];
  bool has_has_output() const;
  private:
  bool _internal_has_has_output() const;
  public:
  void clear_has_output();
  bool has_output() const;
  void set_has_output(bool value);
  private:
  bool _internal_has_output() const;
  void _internal_set_has_output(bool value);
  public:

  // optional bool condense_output = 3 [default = false];
  bool has_condense_output() const;
  private:
  bool _internal_has_condense_output() const;
  public:
  void clear_condense_output();
  bool condense_output() const;
  void set_condense_output(bool value);
  private:
  bool _internal_condense_output() const;
  void _internal_set_condense_output(bool value);
  public:

  // @@protoc_insertion_point(class_scope:lm.message.WorkUnitOutput)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::io::BarrierCrossingTimes > barrier_crossing_times_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::io::FirstPassageTimes > first_passage_times_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::io::OrderParameterFirstPassageTimes > order_parameter_first_passage_times_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr record_name_prefix_;
  ::lm::io::ConcentrationsTimeSeries* concentrations_time_series_;
  ::lm::io::DegreeAdvancementTimeSeries* degree_advancement_time_series_;
  ::lm::io::LatticeTimeSeries* lattice_time_series_;
  ::lm::io::OrderParameterTimeSeries* order_parameter_time_series_;
  ::lm::io::SpeciesTimeSeries* species_time_series_;
  ::lm::io::StochasticProcessTimeSeries* stochastic_process_time_series_;
  bool has_output_;
  bool condense_output_;
  friend struct ::TableStruct_lm_2fmessage_2fWorkUnitOutput_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// WorkUnitOutput

// optional bool has_output = 1 [default = false];
inline bool WorkUnitOutput::_internal_has_has_output() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool WorkUnitOutput::has_has_output() const {
  return _internal_has_has_output();
}
inline void WorkUnitOutput::clear_has_output() {
  has_output_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool WorkUnitOutput::_internal_has_output() const {
  return has_output_;
}
inline bool WorkUnitOutput::has_output() const {
  // @@protoc_insertion_point(field_get:lm.message.WorkUnitOutput.has_output)
  return _internal_has_output();
}
inline void WorkUnitOutput::_internal_set_has_output(bool value) {
  _has_bits_[0] |= 0x00000080u;
  has_output_ = value;
}
inline void WorkUnitOutput::set_has_output(bool value) {
  _internal_set_has_output(value);
  // @@protoc_insertion_point(field_set:lm.message.WorkUnitOutput.has_output)
}

// optional string record_name_prefix = 2;
inline bool WorkUnitOutput::_internal_has_record_name_prefix() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool WorkUnitOutput::has_record_name_prefix() const {
  return _internal_has_record_name_prefix();
}
inline void WorkUnitOutput::clear_record_name_prefix() {
  record_name_prefix_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& WorkUnitOutput::record_name_prefix() const {
  // @@protoc_insertion_point(field_get:lm.message.WorkUnitOutput.record_name_prefix)
  return _internal_record_name_prefix();
}
inline void WorkUnitOutput::set_record_name_prefix(const std::string& value) {
  _internal_set_record_name_prefix(value);
  // @@protoc_insertion_point(field_set:lm.message.WorkUnitOutput.record_name_prefix)
}
inline std::string* WorkUnitOutput::mutable_record_name_prefix() {
  // @@protoc_insertion_point(field_mutable:lm.message.WorkUnitOutput.record_name_prefix)
  return _internal_mutable_record_name_prefix();
}
inline const std::string& WorkUnitOutput::_internal_record_name_prefix() const {
  return record_name_prefix_.Get();
}
inline void WorkUnitOutput::_internal_set_record_name_prefix(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  record_name_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void WorkUnitOutput::set_record_name_prefix(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  record_name_prefix_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:lm.message.WorkUnitOutput.record_name_prefix)
}
inline void WorkUnitOutput::set_record_name_prefix(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  record_name_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:lm.message.WorkUnitOutput.record_name_prefix)
}
inline void WorkUnitOutput::set_record_name_prefix(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  record_name_prefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:lm.message.WorkUnitOutput.record_name_prefix)
}
inline std::string* WorkUnitOutput::_internal_mutable_record_name_prefix() {
  _has_bits_[0] |= 0x00000001u;
  return record_name_prefix_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* WorkUnitOutput::release_record_name_prefix() {
  // @@protoc_insertion_point(field_release:lm.message.WorkUnitOutput.record_name_prefix)
  if (!_internal_has_record_name_prefix()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return record_name_prefix_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void WorkUnitOutput::set_allocated_record_name_prefix(std::string* record_name_prefix) {
  if (record_name_prefix != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  record_name_prefix_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), record_name_prefix,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:lm.message.WorkUnitOutput.record_name_prefix)
}

// optional bool condense_output = 3 [default = false];
inline bool WorkUnitOutput::_internal_has_condense_output() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool WorkUnitOutput::has_condense_output() const {
  return _internal_has_condense_output();
}
inline void WorkUnitOutput::clear_condense_output() {
  condense_output_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool WorkUnitOutput::_internal_condense_output() const {
  return condense_output_;
}
inline bool WorkUnitOutput::condense_output() const {
  // @@protoc_insertion_point(field_get:lm.message.WorkUnitOutput.condense_output)
  return _internal_condense_output();
}
inline void WorkUnitOutput::_internal_set_condense_output(bool value) {
  _has_bits_[0] |= 0x00000100u;
  condense_output_ = value;
}
inline void WorkUnitOutput::set_condense_output(bool value) {
  _internal_set_condense_output(value);
  // @@protoc_insertion_point(field_set:lm.message.WorkUnitOutput.condense_output)
}

// optional .lm.io.ConcentrationsTimeSeries concentrations_time_series = 11;
inline bool WorkUnitOutput::_internal_has_concentrations_time_series() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || concentrations_time_series_ != nullptr);
  return value;
}
inline bool WorkUnitOutput::has_concentrations_time_series() const {
  return _internal_has_concentrations_time_series();
}
inline const ::lm::io::ConcentrationsTimeSeries& WorkUnitOutput::_internal_concentrations_time_series() const {
  const ::lm::io::ConcentrationsTimeSeries* p = concentrations_time_series_;
  return p != nullptr ? *p : *reinterpret_cast<const ::lm::io::ConcentrationsTimeSeries*>(
      &::lm::io::_ConcentrationsTimeSeries_default_instance_);
}
inline const ::lm::io::ConcentrationsTimeSeries& WorkUnitOutput::concentrations_time_series() const {
  // @@protoc_insertion_point(field_get:lm.message.WorkUnitOutput.concentrations_time_series)
  return _internal_concentrations_time_series();
}
inline void WorkUnitOutput::unsafe_arena_set_allocated_concentrations_time_series(
    ::lm::io::ConcentrationsTimeSeries* concentrations_time_series) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(concentrations_time_series_);
  }
  concentrations_time_series_ = concentrations_time_series;
  if (concentrations_time_series) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lm.message.WorkUnitOutput.concentrations_time_series)
}
inline ::lm::io::ConcentrationsTimeSeries* WorkUnitOutput::release_concentrations_time_series() {
  _has_bits_[0] &= ~0x00000002u;
  ::lm::io::ConcentrationsTimeSeries* temp = concentrations_time_series_;
  concentrations_time_series_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::lm::io::ConcentrationsTimeSeries* WorkUnitOutput::unsafe_arena_release_concentrations_time_series() {
  // @@protoc_insertion_point(field_release:lm.message.WorkUnitOutput.concentrations_time_series)
  _has_bits_[0] &= ~0x00000002u;
  ::lm::io::ConcentrationsTimeSeries* temp = concentrations_time_series_;
  concentrations_time_series_ = nullptr;
  return temp;
}
inline ::lm::io::ConcentrationsTimeSeries* WorkUnitOutput::_internal_mutable_concentrations_time_series() {
  _has_bits_[0] |= 0x00000002u;
  if (concentrations_time_series_ == nullptr) {
    auto* p = CreateMaybeMessage<::lm::io::ConcentrationsTimeSeries>(GetArena());
    concentrations_time_series_ = p;
  }
  return concentrations_time_series_;
}
inline ::lm::io::ConcentrationsTimeSeries* WorkUnitOutput::mutable_concentrations_time_series() {
  // @@protoc_insertion_point(field_mutable:lm.message.WorkUnitOutput.concentrations_time_series)
  return _internal_mutable_concentrations_time_series();
}
inline void WorkUnitOutput::set_allocated_concentrations_time_series(::lm::io::ConcentrationsTimeSeries* concentrations_time_series) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(concentrations_time_series_);
  }
  if (concentrations_time_series) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(concentrations_time_series)->GetArena();
    if (message_arena != submessage_arena) {
      concentrations_time_series = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, concentrations_time_series, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  concentrations_time_series_ = concentrations_time_series;
  // @@protoc_insertion_point(field_set_allocated:lm.message.WorkUnitOutput.concentrations_time_series)
}

// optional .lm.io.DegreeAdvancementTimeSeries degree_advancement_time_series = 12;
inline bool WorkUnitOutput::_internal_has_degree_advancement_time_series() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || degree_advancement_time_series_ != nullptr);
  return value;
}
inline bool WorkUnitOutput::has_degree_advancement_time_series() const {
  return _internal_has_degree_advancement_time_series();
}
inline const ::lm::io::DegreeAdvancementTimeSeries& WorkUnitOutput::_internal_degree_advancement_time_series() const {
  const ::lm::io::DegreeAdvancementTimeSeries* p = degree_advancement_time_series_;
  return p != nullptr ? *p : *reinterpret_cast<const ::lm::io::DegreeAdvancementTimeSeries*>(
      &::lm::io::_DegreeAdvancementTimeSeries_default_instance_);
}
inline const ::lm::io::DegreeAdvancementTimeSeries& WorkUnitOutput::degree_advancement_time_series() const {
  // @@protoc_insertion_point(field_get:lm.message.WorkUnitOutput.degree_advancement_time_series)
  return _internal_degree_advancement_time_series();
}
inline void WorkUnitOutput::unsafe_arena_set_allocated_degree_advancement_time_series(
    ::lm::io::DegreeAdvancementTimeSeries* degree_advancement_time_series) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(degree_advancement_time_series_);
  }
  degree_advancement_time_series_ = degree_advancement_time_series;
  if (degree_advancement_time_series) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lm.message.WorkUnitOutput.degree_advancement_time_series)
}
inline ::lm::io::DegreeAdvancementTimeSeries* WorkUnitOutput::release_degree_advancement_time_series() {
  _has_bits_[0] &= ~0x00000004u;
  ::lm::io::DegreeAdvancementTimeSeries* temp = degree_advancement_time_series_;
  degree_advancement_time_series_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::lm::io::DegreeAdvancementTimeSeries* WorkUnitOutput::unsafe_arena_release_degree_advancement_time_series() {
  // @@protoc_insertion_point(field_release:lm.message.WorkUnitOutput.degree_advancement_time_series)
  _has_bits_[0] &= ~0x00000004u;
  ::lm::io::DegreeAdvancementTimeSeries* temp = degree_advancement_time_series_;
  degree_advancement_time_series_ = nullptr;
  return temp;
}
inline ::lm::io::DegreeAdvancementTimeSeries* WorkUnitOutput::_internal_mutable_degree_advancement_time_series() {
  _has_bits_[0] |= 0x00000004u;
  if (degree_advancement_time_series_ == nullptr) {
    auto* p = CreateMaybeMessage<::lm::io::DegreeAdvancementTimeSeries>(GetArena());
    degree_advancement_time_series_ = p;
  }
  return degree_advancement_time_series_;
}
inline ::lm::io::DegreeAdvancementTimeSeries* WorkUnitOutput::mutable_degree_advancement_time_series() {
  // @@protoc_insertion_point(field_mutable:lm.message.WorkUnitOutput.degree_advancement_time_series)
  return _internal_mutable_degree_advancement_time_series();
}
inline void WorkUnitOutput::set_allocated_degree_advancement_time_series(::lm::io::DegreeAdvancementTimeSeries* degree_advancement_time_series) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(degree_advancement_time_series_);
  }
  if (degree_advancement_time_series) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(degree_advancement_time_series)->GetArena();
    if (message_arena != submessage_arena) {
      degree_advancement_time_series = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, degree_advancement_time_series, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  degree_advancement_time_series_ = degree_advancement_time_series;
  // @@protoc_insertion_point(field_set_allocated:lm.message.WorkUnitOutput.degree_advancement_time_series)
}

// optional .lm.io.LatticeTimeSeries lattice_time_series = 13;
inline bool WorkUnitOutput::_internal_has_lattice_time_series() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || lattice_time_series_ != nullptr);
  return value;
}
inline bool WorkUnitOutput::has_lattice_time_series() const {
  return _internal_has_lattice_time_series();
}
inline const ::lm::io::LatticeTimeSeries& WorkUnitOutput::_internal_lattice_time_series() const {
  const ::lm::io::LatticeTimeSeries* p = lattice_time_series_;
  return p != nullptr ? *p : *reinterpret_cast<const ::lm::io::LatticeTimeSeries*>(
      &::lm::io::_LatticeTimeSeries_default_instance_);
}
inline const ::lm::io::LatticeTimeSeries& WorkUnitOutput::lattice_time_series() const {
  // @@protoc_insertion_point(field_get:lm.message.WorkUnitOutput.lattice_time_series)
  return _internal_lattice_time_series();
}
inline void WorkUnitOutput::unsafe_arena_set_allocated_lattice_time_series(
    ::lm::io::LatticeTimeSeries* lattice_time_series) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(lattice_time_series_);
  }
  lattice_time_series_ = lattice_time_series;
  if (lattice_time_series) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lm.message.WorkUnitOutput.lattice_time_series)
}
inline ::lm::io::LatticeTimeSeries* WorkUnitOutput::release_lattice_time_series() {
  _has_bits_[0] &= ~0x00000008u;
  ::lm::io::LatticeTimeSeries* temp = lattice_time_series_;
  lattice_time_series_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::lm::io::LatticeTimeSeries* WorkUnitOutput::unsafe_arena_release_lattice_time_series() {
  // @@protoc_insertion_point(field_release:lm.message.WorkUnitOutput.lattice_time_series)
  _has_bits_[0] &= ~0x00000008u;
  ::lm::io::LatticeTimeSeries* temp = lattice_time_series_;
  lattice_time_series_ = nullptr;
  return temp;
}
inline ::lm::io::LatticeTimeSeries* WorkUnitOutput::_internal_mutable_lattice_time_series() {
  _has_bits_[0] |= 0x00000008u;
  if (lattice_time_series_ == nullptr) {
    auto* p = CreateMaybeMessage<::lm::io::LatticeTimeSeries>(GetArena());
    lattice_time_series_ = p;
  }
  return lattice_time_series_;
}
inline ::lm::io::LatticeTimeSeries* WorkUnitOutput::mutable_lattice_time_series() {
  // @@protoc_insertion_point(field_mutable:lm.message.WorkUnitOutput.lattice_time_series)
  return _internal_mutable_lattice_time_series();
}
inline void WorkUnitOutput::set_allocated_lattice_time_series(::lm::io::LatticeTimeSeries* lattice_time_series) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(lattice_time_series_);
  }
  if (lattice_time_series) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(lattice_time_series)->GetArena();
    if (message_arena != submessage_arena) {
      lattice_time_series = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, lattice_time_series, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  lattice_time_series_ = lattice_time_series;
  // @@protoc_insertion_point(field_set_allocated:lm.message.WorkUnitOutput.lattice_time_series)
}

// optional .lm.io.OrderParameterTimeSeries order_parameter_time_series = 14;
inline bool WorkUnitOutput::_internal_has_order_parameter_time_series() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || order_parameter_time_series_ != nullptr);
  return value;
}
inline bool WorkUnitOutput::has_order_parameter_time_series() const {
  return _internal_has_order_parameter_time_series();
}
inline const ::lm::io::OrderParameterTimeSeries& WorkUnitOutput::_internal_order_parameter_time_series() const {
  const ::lm::io::OrderParameterTimeSeries* p = order_parameter_time_series_;
  return p != nullptr ? *p : *reinterpret_cast<const ::lm::io::OrderParameterTimeSeries*>(
      &::lm::io::_OrderParameterTimeSeries_default_instance_);
}
inline const ::lm::io::OrderParameterTimeSeries& WorkUnitOutput::order_parameter_time_series() const {
  // @@protoc_insertion_point(field_get:lm.message.WorkUnitOutput.order_parameter_time_series)
  return _internal_order_parameter_time_series();
}
inline void WorkUnitOutput::unsafe_arena_set_allocated_order_parameter_time_series(
    ::lm::io::OrderParameterTimeSeries* order_parameter_time_series) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(order_parameter_time_series_);
  }
  order_parameter_time_series_ = order_parameter_time_series;
  if (order_parameter_time_series) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lm.message.WorkUnitOutput.order_parameter_time_series)
}
inline ::lm::io::OrderParameterTimeSeries* WorkUnitOutput::release_order_parameter_time_series() {
  _has_bits_[0] &= ~0x00000010u;
  ::lm::io::OrderParameterTimeSeries* temp = order_parameter_time_series_;
  order_parameter_time_series_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::lm::io::OrderParameterTimeSeries* WorkUnitOutput::unsafe_arena_release_order_parameter_time_series() {
  // @@protoc_insertion_point(field_release:lm.message.WorkUnitOutput.order_parameter_time_series)
  _has_bits_[0] &= ~0x00000010u;
  ::lm::io::OrderParameterTimeSeries* temp = order_parameter_time_series_;
  order_parameter_time_series_ = nullptr;
  return temp;
}
inline ::lm::io::OrderParameterTimeSeries* WorkUnitOutput::_internal_mutable_order_parameter_time_series() {
  _has_bits_[0] |= 0x00000010u;
  if (order_parameter_time_series_ == nullptr) {
    auto* p = CreateMaybeMessage<::lm::io::OrderParameterTimeSeries>(GetArena());
    order_parameter_time_series_ = p;
  }
  return order_parameter_time_series_;
}
inline ::lm::io::OrderParameterTimeSeries* WorkUnitOutput::mutable_order_parameter_time_series() {
  // @@protoc_insertion_point(field_mutable:lm.message.WorkUnitOutput.order_parameter_time_series)
  return _internal_mutable_order_parameter_time_series();
}
inline void WorkUnitOutput::set_allocated_order_parameter_time_series(::lm::io::OrderParameterTimeSeries* order_parameter_time_series) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(order_parameter_time_series_);
  }
  if (order_parameter_time_series) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(order_parameter_time_series)->GetArena();
    if (message_arena != submessage_arena) {
      order_parameter_time_series = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, order_parameter_time_series, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  order_parameter_time_series_ = order_parameter_time_series;
  // @@protoc_insertion_point(field_set_allocated:lm.message.WorkUnitOutput.order_parameter_time_series)
}

// optional .lm.io.SpeciesTimeSeries species_time_series = 16;
inline bool WorkUnitOutput::_internal_has_species_time_series() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || species_time_series_ != nullptr);
  return value;
}
inline bool WorkUnitOutput::has_species_time_series() const {
  return _internal_has_species_time_series();
}
inline const ::lm::io::SpeciesTimeSeries& WorkUnitOutput::_internal_species_time_series() const {
  const ::lm::io::SpeciesTimeSeries* p = species_time_series_;
  return p != nullptr ? *p : *reinterpret_cast<const ::lm::io::SpeciesTimeSeries*>(
      &::lm::io::_SpeciesTimeSeries_default_instance_);
}
inline const ::lm::io::SpeciesTimeSeries& WorkUnitOutput::species_time_series() const {
  // @@protoc_insertion_point(field_get:lm.message.WorkUnitOutput.species_time_series)
  return _internal_species_time_series();
}
inline void WorkUnitOutput::unsafe_arena_set_allocated_species_time_series(
    ::lm::io::SpeciesTimeSeries* species_time_series) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(species_time_series_);
  }
  species_time_series_ = species_time_series;
  if (species_time_series) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lm.message.WorkUnitOutput.species_time_series)
}
inline ::lm::io::SpeciesTimeSeries* WorkUnitOutput::release_species_time_series() {
  _has_bits_[0] &= ~0x00000020u;
  ::lm::io::SpeciesTimeSeries* temp = species_time_series_;
  species_time_series_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::lm::io::SpeciesTimeSeries* WorkUnitOutput::unsafe_arena_release_species_time_series() {
  // @@protoc_insertion_point(field_release:lm.message.WorkUnitOutput.species_time_series)
  _has_bits_[0] &= ~0x00000020u;
  ::lm::io::SpeciesTimeSeries* temp = species_time_series_;
  species_time_series_ = nullptr;
  return temp;
}
inline ::lm::io::SpeciesTimeSeries* WorkUnitOutput::_internal_mutable_species_time_series() {
  _has_bits_[0] |= 0x00000020u;
  if (species_time_series_ == nullptr) {
    auto* p = CreateMaybeMessage<::lm::io::SpeciesTimeSeries>(GetArena());
    species_time_series_ = p;
  }
  return species_time_series_;
}
inline ::lm::io::SpeciesTimeSeries* WorkUnitOutput::mutable_species_time_series() {
  // @@protoc_insertion_point(field_mutable:lm.message.WorkUnitOutput.species_time_series)
  return _internal_mutable_species_time_series();
}
inline void WorkUnitOutput::set_allocated_species_time_series(::lm::io::SpeciesTimeSeries* species_time_series) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(species_time_series_);
  }
  if (species_time_series) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(species_time_series)->GetArena();
    if (message_arena != submessage_arena) {
      species_time_series = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, species_time_series, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  species_time_series_ = species_time_series;
  // @@protoc_insertion_point(field_set_allocated:lm.message.WorkUnitOutput.species_time_series)
}

// optional .lm.io.StochasticProcessTimeSeries stochastic_process_time_series = 17;
inline bool WorkUnitOutput::_internal_has_stochastic_process_time_series() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || stochastic_process_time_series_ != nullptr);
  return value;
}
inline bool WorkUnitOutput::has_stochastic_process_time_series() const {
  return _internal_has_stochastic_process_time_series();
}
inline const ::lm::io::StochasticProcessTimeSeries& WorkUnitOutput::_internal_stochastic_process_time_series() const {
  const ::lm::io::StochasticProcessTimeSeries* p = stochastic_process_time_series_;
  return p != nullptr ? *p : *reinterpret_cast<const ::lm::io::StochasticProcessTimeSeries*>(
      &::lm::io::_StochasticProcessTimeSeries_default_instance_);
}
inline const ::lm::io::StochasticProcessTimeSeries& WorkUnitOutput::stochastic_process_time_series() const {
  // @@protoc_insertion_point(field_get:lm.message.WorkUnitOutput.stochastic_process_time_series)
  return _internal_stochastic_process_time_series();
}
inline void WorkUnitOutput::unsafe_arena_set_allocated_stochastic_process_time_series(
    ::lm::io::StochasticProcessTimeSeries* stochastic_process_time_series) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stochastic_process_time_series_);
  }
  stochastic_process_time_series_ = stochastic_process_time_series;
  if (stochastic_process_time_series) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lm.message.WorkUnitOutput.stochastic_process_time_series)
}
inline ::lm::io::StochasticProcessTimeSeries* WorkUnitOutput::release_stochastic_process_time_series() {
  _has_bits_[0] &= ~0x00000040u;
  ::lm::io::StochasticProcessTimeSeries* temp = stochastic_process_time_series_;
  stochastic_process_time_series_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::lm::io::StochasticProcessTimeSeries* WorkUnitOutput::unsafe_arena_release_stochastic_process_time_series() {
  // @@protoc_insertion_point(field_release:lm.message.WorkUnitOutput.stochastic_process_time_series)
  _has_bits_[0] &= ~0x00000040u;
  ::lm::io::StochasticProcessTimeSeries* temp = stochastic_process_time_series_;
  stochastic_process_time_series_ = nullptr;
  return temp;
}
inline ::lm::io::StochasticProcessTimeSeries* WorkUnitOutput::_internal_mutable_stochastic_process_time_series() {
  _has_bits_[0] |= 0x00000040u;
  if (stochastic_process_time_series_ == nullptr) {
    auto* p = CreateMaybeMessage<::lm::io::StochasticProcessTimeSeries>(GetArena());
    stochastic_process_time_series_ = p;
  }
  return stochastic_process_time_series_;
}
inline ::lm::io::StochasticProcessTimeSeries* WorkUnitOutput::mutable_stochastic_process_time_series() {
  // @@protoc_insertion_point(field_mutable:lm.message.WorkUnitOutput.stochastic_process_time_series)
  return _internal_mutable_stochastic_process_time_series();
}
inline void WorkUnitOutput::set_allocated_stochastic_process_time_series(::lm::io::StochasticProcessTimeSeries* stochastic_process_time_series) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(stochastic_process_time_series_);
  }
  if (stochastic_process_time_series) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stochastic_process_time_series)->GetArena();
    if (message_arena != submessage_arena) {
      stochastic_process_time_series = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stochastic_process_time_series, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  stochastic_process_time_series_ = stochastic_process_time_series;
  // @@protoc_insertion_point(field_set_allocated:lm.message.WorkUnitOutput.stochastic_process_time_series)
}

// repeated .lm.io.BarrierCrossingTimes barrier_crossing_times = 20;
inline int WorkUnitOutput::_internal_barrier_crossing_times_size() const {
  return barrier_crossing_times_.size();
}
inline int WorkUnitOutput::barrier_crossing_times_size() const {
  return _internal_barrier_crossing_times_size();
}
inline ::lm::io::BarrierCrossingTimes* WorkUnitOutput::mutable_barrier_crossing_times(int index) {
  // @@protoc_insertion_point(field_mutable:lm.message.WorkUnitOutput.barrier_crossing_times)
  return barrier_crossing_times_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::io::BarrierCrossingTimes >*
WorkUnitOutput::mutable_barrier_crossing_times() {
  // @@protoc_insertion_point(field_mutable_list:lm.message.WorkUnitOutput.barrier_crossing_times)
  return &barrier_crossing_times_;
}
inline const ::lm::io::BarrierCrossingTimes& WorkUnitOutput::_internal_barrier_crossing_times(int index) const {
  return barrier_crossing_times_.Get(index);
}
inline const ::lm::io::BarrierCrossingTimes& WorkUnitOutput::barrier_crossing_times(int index) const {
  // @@protoc_insertion_point(field_get:lm.message.WorkUnitOutput.barrier_crossing_times)
  return _internal_barrier_crossing_times(index);
}
inline ::lm::io::BarrierCrossingTimes* WorkUnitOutput::_internal_add_barrier_crossing_times() {
  return barrier_crossing_times_.Add();
}
inline ::lm::io::BarrierCrossingTimes* WorkUnitOutput::add_barrier_crossing_times() {
  // @@protoc_insertion_point(field_add:lm.message.WorkUnitOutput.barrier_crossing_times)
  return _internal_add_barrier_crossing_times();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::io::BarrierCrossingTimes >&
WorkUnitOutput::barrier_crossing_times() const {
  // @@protoc_insertion_point(field_list:lm.message.WorkUnitOutput.barrier_crossing_times)
  return barrier_crossing_times_;
}

// repeated .lm.io.FirstPassageTimes first_passage_times = 21;
inline int WorkUnitOutput::_internal_first_passage_times_size() const {
  return first_passage_times_.size();
}
inline int WorkUnitOutput::first_passage_times_size() const {
  return _internal_first_passage_times_size();
}
inline ::lm::io::FirstPassageTimes* WorkUnitOutput::mutable_first_passage_times(int index) {
  // @@protoc_insertion_point(field_mutable:lm.message.WorkUnitOutput.first_passage_times)
  return first_passage_times_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::io::FirstPassageTimes >*
WorkUnitOutput::mutable_first_passage_times() {
  // @@protoc_insertion_point(field_mutable_list:lm.message.WorkUnitOutput.first_passage_times)
  return &first_passage_times_;
}
inline const ::lm::io::FirstPassageTimes& WorkUnitOutput::_internal_first_passage_times(int index) const {
  return first_passage_times_.Get(index);
}
inline const ::lm::io::FirstPassageTimes& WorkUnitOutput::first_passage_times(int index) const {
  // @@protoc_insertion_point(field_get:lm.message.WorkUnitOutput.first_passage_times)
  return _internal_first_passage_times(index);
}
inline ::lm::io::FirstPassageTimes* WorkUnitOutput::_internal_add_first_passage_times() {
  return first_passage_times_.Add();
}
inline ::lm::io::FirstPassageTimes* WorkUnitOutput::add_first_passage_times() {
  // @@protoc_insertion_point(field_add:lm.message.WorkUnitOutput.first_passage_times)
  return _internal_add_first_passage_times();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::io::FirstPassageTimes >&
WorkUnitOutput::first_passage_times() const {
  // @@protoc_insertion_point(field_list:lm.message.WorkUnitOutput.first_passage_times)
  return first_passage_times_;
}

// repeated .lm.io.OrderParameterFirstPassageTimes order_parameter_first_passage_times = 22;
inline int WorkUnitOutput::_internal_order_parameter_first_passage_times_size() const {
  return order_parameter_first_passage_times_.size();
}
inline int WorkUnitOutput::order_parameter_first_passage_times_size() const {
  return _internal_order_parameter_first_passage_times_size();
}
inline ::lm::io::OrderParameterFirstPassageTimes* WorkUnitOutput::mutable_order_parameter_first_passage_times(int index) {
  // @@protoc_insertion_point(field_mutable:lm.message.WorkUnitOutput.order_parameter_first_passage_times)
  return order_parameter_first_passage_times_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::io::OrderParameterFirstPassageTimes >*
WorkUnitOutput::mutable_order_parameter_first_passage_times() {
  // @@protoc_insertion_point(field_mutable_list:lm.message.WorkUnitOutput.order_parameter_first_passage_times)
  return &order_parameter_first_passage_times_;
}
inline const ::lm::io::OrderParameterFirstPassageTimes& WorkUnitOutput::_internal_order_parameter_first_passage_times(int index) const {
  return order_parameter_first_passage_times_.Get(index);
}
inline const ::lm::io::OrderParameterFirstPassageTimes& WorkUnitOutput::order_parameter_first_passage_times(int index) const {
  // @@protoc_insertion_point(field_get:lm.message.WorkUnitOutput.order_parameter_first_passage_times)
  return _internal_order_parameter_first_passage_times(index);
}
inline ::lm::io::OrderParameterFirstPassageTimes* WorkUnitOutput::_internal_add_order_parameter_first_passage_times() {
  return order_parameter_first_passage_times_.Add();
}
inline ::lm::io::OrderParameterFirstPassageTimes* WorkUnitOutput::add_order_parameter_first_passage_times() {
  // @@protoc_insertion_point(field_add:lm.message.WorkUnitOutput.order_parameter_first_passage_times)
  return _internal_add_order_parameter_first_passage_times();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::io::OrderParameterFirstPassageTimes >&
WorkUnitOutput::order_parameter_first_passage_times() const {
  // @@protoc_insertion_point(field_list:lm.message.WorkUnitOutput.order_parameter_first_passage_times)
  return order_parameter_first_passage_times_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace lm

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_lm_2fmessage_2fWorkUnitOutput_2eproto
