// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lm/io/RunStats.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_lm_2fio_2fRunStats_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_lm_2fio_2fRunStats_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_lm_2fio_2fRunStats_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_lm_2fio_2fRunStats_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_lm_2fio_2fRunStats_2eproto;
namespace lm {
namespace io {
class RunStats;
class RunStatsDefaultTypeInternal;
extern RunStatsDefaultTypeInternal _RunStats_default_instance_;
class RunStats_TrajectoryStat;
class RunStats_TrajectoryStatDefaultTypeInternal;
extern RunStats_TrajectoryStatDefaultTypeInternal _RunStats_TrajectoryStat_default_instance_;
}  // namespace io
}  // namespace lm
PROTOBUF_NAMESPACE_OPEN
template<> ::lm::io::RunStats* Arena::CreateMaybeMessage<::lm::io::RunStats>(Arena*);
template<> ::lm::io::RunStats_TrajectoryStat* Arena::CreateMaybeMessage<::lm::io::RunStats_TrajectoryStat>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace lm {
namespace io {

// ===================================================================

class RunStats_TrajectoryStat PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:lm.io.RunStats.TrajectoryStat) */ {
 public:
  inline RunStats_TrajectoryStat() : RunStats_TrajectoryStat(nullptr) {}
  virtual ~RunStats_TrajectoryStat();

  RunStats_TrajectoryStat(const RunStats_TrajectoryStat& from);
  RunStats_TrajectoryStat(RunStats_TrajectoryStat&& from) noexcept
    : RunStats_TrajectoryStat() {
    *this = ::std::move(from);
  }

  inline RunStats_TrajectoryStat& operator=(const RunStats_TrajectoryStat& from) {
    CopyFrom(from);
    return *this;
  }
  inline RunStats_TrajectoryStat& operator=(RunStats_TrajectoryStat&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RunStats_TrajectoryStat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RunStats_TrajectoryStat* internal_default_instance() {
    return reinterpret_cast<const RunStats_TrajectoryStat*>(
               &_RunStats_TrajectoryStat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(RunStats_TrajectoryStat& a, RunStats_TrajectoryStat& b) {
    a.Swap(&b);
  }
  inline void Swap(RunStats_TrajectoryStat* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RunStats_TrajectoryStat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RunStats_TrajectoryStat* New() const final {
    return CreateMaybeMessage<RunStats_TrajectoryStat>(nullptr);
  }

  RunStats_TrajectoryStat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RunStats_TrajectoryStat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RunStats_TrajectoryStat& from);
  void MergeFrom(const RunStats_TrajectoryStat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RunStats_TrajectoryStat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "lm.io.RunStats.TrajectoryStat";
  }
  protected:
  explicit RunStats_TrajectoryStat(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_lm_2fio_2fRunStats_2eproto);
    return ::descriptor_table_lm_2fio_2fRunStats_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrajectoryIdFieldNumber = 1,
    kRunTimeFieldNumber = 2,
  };
  // optional uint64 trajectory_id = 1 [default = 0];
  bool has_trajectory_id() const;
  private:
  bool _internal_has_trajectory_id() const;
  public:
  void clear_trajectory_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 trajectory_id() const;
  void set_trajectory_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_trajectory_id() const;
  void _internal_set_trajectory_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional double run_time = 2 [default = 0];
  bool has_run_time() const;
  private:
  bool _internal_has_run_time() const;
  public:
  void clear_run_time();
  double run_time() const;
  void set_run_time(double value);
  private:
  double _internal_run_time() const;
  void _internal_set_run_time(double value);
  public:

  // @@protoc_insertion_point(class_scope:lm.io.RunStats.TrajectoryStat)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 trajectory_id_;
  double run_time_;
  friend struct ::TableStruct_lm_2fio_2fRunStats_2eproto;
};
// -------------------------------------------------------------------

class RunStats PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:lm.io.RunStats) */ {
 public:
  inline RunStats() : RunStats(nullptr) {}
  virtual ~RunStats();

  RunStats(const RunStats& from);
  RunStats(RunStats&& from) noexcept
    : RunStats() {
    *this = ::std::move(from);
  }

  inline RunStats& operator=(const RunStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline RunStats& operator=(RunStats&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RunStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RunStats* internal_default_instance() {
    return reinterpret_cast<const RunStats*>(
               &_RunStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(RunStats& a, RunStats& b) {
    a.Swap(&b);
  }
  inline void Swap(RunStats* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RunStats* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RunStats* New() const final {
    return CreateMaybeMessage<RunStats>(nullptr);
  }

  RunStats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RunStats>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RunStats& from);
  void MergeFrom(const RunStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RunStats* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "lm.io.RunStats";
  }
  protected:
  explicit RunStats(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_lm_2fio_2fRunStats_2eproto);
    return ::descriptor_table_lm_2fio_2fRunStats_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef RunStats_TrajectoryStat TrajectoryStat;

  // accessors -------------------------------------------------------

  enum : int {
    kTrajectoryStatFieldNumber = 1,
    kTotalRuntTimeFieldNumber = 2,
    kCountTrajectoriesFieldNumber = 3,
  };
  // repeated .lm.io.RunStats.TrajectoryStat trajectory_stat = 1;
  int trajectory_stat_size() const;
  private:
  int _internal_trajectory_stat_size() const;
  public:
  void clear_trajectory_stat();
  ::lm::io::RunStats_TrajectoryStat* mutable_trajectory_stat(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::io::RunStats_TrajectoryStat >*
      mutable_trajectory_stat();
  private:
  const ::lm::io::RunStats_TrajectoryStat& _internal_trajectory_stat(int index) const;
  ::lm::io::RunStats_TrajectoryStat* _internal_add_trajectory_stat();
  public:
  const ::lm::io::RunStats_TrajectoryStat& trajectory_stat(int index) const;
  ::lm::io::RunStats_TrajectoryStat* add_trajectory_stat();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::io::RunStats_TrajectoryStat >&
      trajectory_stat() const;

  // optional double total_runt_time = 2 [default = 0];
  bool has_total_runt_time() const;
  private:
  bool _internal_has_total_runt_time() const;
  public:
  void clear_total_runt_time();
  double total_runt_time() const;
  void set_total_runt_time(double value);
  private:
  double _internal_total_runt_time() const;
  void _internal_set_total_runt_time(double value);
  public:

  // optional uint64 count_trajectories = 3 [default = 0];
  bool has_count_trajectories() const;
  private:
  bool _internal_has_count_trajectories() const;
  public:
  void clear_count_trajectories();
  ::PROTOBUF_NAMESPACE_ID::uint64 count_trajectories() const;
  void set_count_trajectories(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_count_trajectories() const;
  void _internal_set_count_trajectories(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:lm.io.RunStats)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::io::RunStats_TrajectoryStat > trajectory_stat_;
  double total_runt_time_;
  ::PROTOBUF_NAMESPACE_ID::uint64 count_trajectories_;
  friend struct ::TableStruct_lm_2fio_2fRunStats_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RunStats_TrajectoryStat

// optional uint64 trajectory_id = 1 [default = 0];
inline bool RunStats_TrajectoryStat::_internal_has_trajectory_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RunStats_TrajectoryStat::has_trajectory_id() const {
  return _internal_has_trajectory_id();
}
inline void RunStats_TrajectoryStat::clear_trajectory_id() {
  trajectory_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RunStats_TrajectoryStat::_internal_trajectory_id() const {
  return trajectory_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RunStats_TrajectoryStat::trajectory_id() const {
  // @@protoc_insertion_point(field_get:lm.io.RunStats.TrajectoryStat.trajectory_id)
  return _internal_trajectory_id();
}
inline void RunStats_TrajectoryStat::_internal_set_trajectory_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  trajectory_id_ = value;
}
inline void RunStats_TrajectoryStat::set_trajectory_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_trajectory_id(value);
  // @@protoc_insertion_point(field_set:lm.io.RunStats.TrajectoryStat.trajectory_id)
}

// optional double run_time = 2 [default = 0];
inline bool RunStats_TrajectoryStat::_internal_has_run_time() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool RunStats_TrajectoryStat::has_run_time() const {
  return _internal_has_run_time();
}
inline void RunStats_TrajectoryStat::clear_run_time() {
  run_time_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline double RunStats_TrajectoryStat::_internal_run_time() const {
  return run_time_;
}
inline double RunStats_TrajectoryStat::run_time() const {
  // @@protoc_insertion_point(field_get:lm.io.RunStats.TrajectoryStat.run_time)
  return _internal_run_time();
}
inline void RunStats_TrajectoryStat::_internal_set_run_time(double value) {
  _has_bits_[0] |= 0x00000002u;
  run_time_ = value;
}
inline void RunStats_TrajectoryStat::set_run_time(double value) {
  _internal_set_run_time(value);
  // @@protoc_insertion_point(field_set:lm.io.RunStats.TrajectoryStat.run_time)
}

// -------------------------------------------------------------------

// RunStats

// repeated .lm.io.RunStats.TrajectoryStat trajectory_stat = 1;
inline int RunStats::_internal_trajectory_stat_size() const {
  return trajectory_stat_.size();
}
inline int RunStats::trajectory_stat_size() const {
  return _internal_trajectory_stat_size();
}
inline void RunStats::clear_trajectory_stat() {
  trajectory_stat_.Clear();
}
inline ::lm::io::RunStats_TrajectoryStat* RunStats::mutable_trajectory_stat(int index) {
  // @@protoc_insertion_point(field_mutable:lm.io.RunStats.trajectory_stat)
  return trajectory_stat_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::io::RunStats_TrajectoryStat >*
RunStats::mutable_trajectory_stat() {
  // @@protoc_insertion_point(field_mutable_list:lm.io.RunStats.trajectory_stat)
  return &trajectory_stat_;
}
inline const ::lm::io::RunStats_TrajectoryStat& RunStats::_internal_trajectory_stat(int index) const {
  return trajectory_stat_.Get(index);
}
inline const ::lm::io::RunStats_TrajectoryStat& RunStats::trajectory_stat(int index) const {
  // @@protoc_insertion_point(field_get:lm.io.RunStats.trajectory_stat)
  return _internal_trajectory_stat(index);
}
inline ::lm::io::RunStats_TrajectoryStat* RunStats::_internal_add_trajectory_stat() {
  return trajectory_stat_.Add();
}
inline ::lm::io::RunStats_TrajectoryStat* RunStats::add_trajectory_stat() {
  // @@protoc_insertion_point(field_add:lm.io.RunStats.trajectory_stat)
  return _internal_add_trajectory_stat();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::lm::io::RunStats_TrajectoryStat >&
RunStats::trajectory_stat() const {
  // @@protoc_insertion_point(field_list:lm.io.RunStats.trajectory_stat)
  return trajectory_stat_;
}

// optional double total_runt_time = 2 [default = 0];
inline bool RunStats::_internal_has_total_runt_time() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RunStats::has_total_runt_time() const {
  return _internal_has_total_runt_time();
}
inline void RunStats::clear_total_runt_time() {
  total_runt_time_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double RunStats::_internal_total_runt_time() const {
  return total_runt_time_;
}
inline double RunStats::total_runt_time() const {
  // @@protoc_insertion_point(field_get:lm.io.RunStats.total_runt_time)
  return _internal_total_runt_time();
}
inline void RunStats::_internal_set_total_runt_time(double value) {
  _has_bits_[0] |= 0x00000001u;
  total_runt_time_ = value;
}
inline void RunStats::set_total_runt_time(double value) {
  _internal_set_total_runt_time(value);
  // @@protoc_insertion_point(field_set:lm.io.RunStats.total_runt_time)
}

// optional uint64 count_trajectories = 3 [default = 0];
inline bool RunStats::_internal_has_count_trajectories() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool RunStats::has_count_trajectories() const {
  return _internal_has_count_trajectories();
}
inline void RunStats::clear_count_trajectories() {
  count_trajectories_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RunStats::_internal_count_trajectories() const {
  return count_trajectories_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RunStats::count_trajectories() const {
  // @@protoc_insertion_point(field_get:lm.io.RunStats.count_trajectories)
  return _internal_count_trajectories();
}
inline void RunStats::_internal_set_count_trajectories(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  count_trajectories_ = value;
}
inline void RunStats::set_count_trajectories(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_count_trajectories(value);
  // @@protoc_insertion_point(field_set:lm.io.RunStats.count_trajectories)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace io
}  // namespace lm

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_lm_2fio_2fRunStats_2eproto
