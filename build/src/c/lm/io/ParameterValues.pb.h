// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lm/io/ParameterValues.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_lm_2fio_2fParameterValues_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_lm_2fio_2fParameterValues_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_lm_2fio_2fParameterValues_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_lm_2fio_2fParameterValues_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_lm_2fio_2fParameterValues_2eproto;
namespace lm {
namespace io {
class ParameterValues;
class ParameterValuesDefaultTypeInternal;
extern ParameterValuesDefaultTypeInternal _ParameterValues_default_instance_;
}  // namespace io
}  // namespace lm
PROTOBUF_NAMESPACE_OPEN
template<> ::lm::io::ParameterValues* Arena::CreateMaybeMessage<::lm::io::ParameterValues>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace lm {
namespace io {

// ===================================================================

class ParameterValues PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:lm.io.ParameterValues) */ {
 public:
  inline ParameterValues() : ParameterValues(nullptr) {}
  virtual ~ParameterValues();

  ParameterValues(const ParameterValues& from);
  ParameterValues(ParameterValues&& from) noexcept
    : ParameterValues() {
    *this = ::std::move(from);
  }

  inline ParameterValues& operator=(const ParameterValues& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParameterValues& operator=(ParameterValues&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ParameterValues& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParameterValues* internal_default_instance() {
    return reinterpret_cast<const ParameterValues*>(
               &_ParameterValues_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ParameterValues& a, ParameterValues& b) {
    a.Swap(&b);
  }
  inline void Swap(ParameterValues* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParameterValues* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParameterValues* New() const final {
    return CreateMaybeMessage<ParameterValues>(nullptr);
  }

  ParameterValues* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParameterValues>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParameterValues& from);
  void MergeFrom(const ParameterValues& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterValues* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "lm.io.ParameterValues";
  }
  protected:
  explicit ParameterValues(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_lm_2fio_2fParameterValues_2eproto);
    return ::descriptor_table_lm_2fio_2fParameterValues_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kTimeFieldNumber = 3,
    kParameterFieldNumber = 1,
  };
  // repeated double value = 2 [packed = true];
  int value_size() const;
  private:
  int _internal_value_size() const;
  public:
  void clear_value();
  private:
  double _internal_value(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_value() const;
  void _internal_add_value(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_value();
  public:
  double value(int index) const;
  void set_value(int index, double value);
  void add_value(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      value() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_value();

  // repeated double time = 3 [packed = true];
  int time_size() const;
  private:
  int _internal_time_size() const;
  public:
  void clear_time();
  private:
  double _internal_time(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_time() const;
  void _internal_add_time(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_time();
  public:
  double time(int index) const;
  void set_time(int index, double value);
  void add_time(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      time() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_time();

  // required string parameter = 1;
  bool has_parameter() const;
  private:
  bool _internal_has_parameter() const;
  public:
  void clear_parameter();
  const std::string& parameter() const;
  void set_parameter(const std::string& value);
  void set_parameter(std::string&& value);
  void set_parameter(const char* value);
  void set_parameter(const char* value, size_t size);
  std::string* mutable_parameter();
  std::string* release_parameter();
  void set_allocated_parameter(std::string* parameter);
  private:
  const std::string& _internal_parameter() const;
  void _internal_set_parameter(const std::string& value);
  std::string* _internal_mutable_parameter();
  public:

  // @@protoc_insertion_point(class_scope:lm.io.ParameterValues)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > value_;
  mutable std::atomic<int> _value_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > time_;
  mutable std::atomic<int> _time_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr parameter_;
  friend struct ::TableStruct_lm_2fio_2fParameterValues_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ParameterValues

// required string parameter = 1;
inline bool ParameterValues::_internal_has_parameter() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ParameterValues::has_parameter() const {
  return _internal_has_parameter();
}
inline void ParameterValues::clear_parameter() {
  parameter_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ParameterValues::parameter() const {
  // @@protoc_insertion_point(field_get:lm.io.ParameterValues.parameter)
  return _internal_parameter();
}
inline void ParameterValues::set_parameter(const std::string& value) {
  _internal_set_parameter(value);
  // @@protoc_insertion_point(field_set:lm.io.ParameterValues.parameter)
}
inline std::string* ParameterValues::mutable_parameter() {
  // @@protoc_insertion_point(field_mutable:lm.io.ParameterValues.parameter)
  return _internal_mutable_parameter();
}
inline const std::string& ParameterValues::_internal_parameter() const {
  return parameter_.Get();
}
inline void ParameterValues::_internal_set_parameter(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  parameter_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ParameterValues::set_parameter(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  parameter_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:lm.io.ParameterValues.parameter)
}
inline void ParameterValues::set_parameter(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  parameter_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:lm.io.ParameterValues.parameter)
}
inline void ParameterValues::set_parameter(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  parameter_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:lm.io.ParameterValues.parameter)
}
inline std::string* ParameterValues::_internal_mutable_parameter() {
  _has_bits_[0] |= 0x00000001u;
  return parameter_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ParameterValues::release_parameter() {
  // @@protoc_insertion_point(field_release:lm.io.ParameterValues.parameter)
  if (!_internal_has_parameter()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return parameter_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ParameterValues::set_allocated_parameter(std::string* parameter) {
  if (parameter != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  parameter_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), parameter,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:lm.io.ParameterValues.parameter)
}

// repeated double value = 2 [packed = true];
inline int ParameterValues::_internal_value_size() const {
  return value_.size();
}
inline int ParameterValues::value_size() const {
  return _internal_value_size();
}
inline void ParameterValues::clear_value() {
  value_.Clear();
}
inline double ParameterValues::_internal_value(int index) const {
  return value_.Get(index);
}
inline double ParameterValues::value(int index) const {
  // @@protoc_insertion_point(field_get:lm.io.ParameterValues.value)
  return _internal_value(index);
}
inline void ParameterValues::set_value(int index, double value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:lm.io.ParameterValues.value)
}
inline void ParameterValues::_internal_add_value(double value) {
  value_.Add(value);
}
inline void ParameterValues::add_value(double value) {
  _internal_add_value(value);
  // @@protoc_insertion_point(field_add:lm.io.ParameterValues.value)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
ParameterValues::_internal_value() const {
  return value_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
ParameterValues::value() const {
  // @@protoc_insertion_point(field_list:lm.io.ParameterValues.value)
  return _internal_value();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
ParameterValues::_internal_mutable_value() {
  return &value_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
ParameterValues::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:lm.io.ParameterValues.value)
  return _internal_mutable_value();
}

// repeated double time = 3 [packed = true];
inline int ParameterValues::_internal_time_size() const {
  return time_.size();
}
inline int ParameterValues::time_size() const {
  return _internal_time_size();
}
inline void ParameterValues::clear_time() {
  time_.Clear();
}
inline double ParameterValues::_internal_time(int index) const {
  return time_.Get(index);
}
inline double ParameterValues::time(int index) const {
  // @@protoc_insertion_point(field_get:lm.io.ParameterValues.time)
  return _internal_time(index);
}
inline void ParameterValues::set_time(int index, double value) {
  time_.Set(index, value);
  // @@protoc_insertion_point(field_set:lm.io.ParameterValues.time)
}
inline void ParameterValues::_internal_add_time(double value) {
  time_.Add(value);
}
inline void ParameterValues::add_time(double value) {
  _internal_add_time(value);
  // @@protoc_insertion_point(field_add:lm.io.ParameterValues.time)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
ParameterValues::_internal_time() const {
  return time_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
ParameterValues::time() const {
  // @@protoc_insertion_point(field_list:lm.io.ParameterValues.time)
  return _internal_time();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
ParameterValues::_internal_mutable_time() {
  return &time_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
ParameterValues::mutable_time() {
  // @@protoc_insertion_point(field_mutable_list:lm.io.ParameterValues.time)
  return _internal_mutable_time();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace io
}  // namespace lm

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_lm_2fio_2fParameterValues_2eproto
