/*
 * Copyright 2012-2019 Johns Hopkins University
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Developed by: Roberts Group
 *               Johns Hopkins University
 *               http://biophysics.jhu.edu/roberts/
 *
 * Author(s): Elijah Roberts, Max Klein
 */

syntax = "proto2";
package lm.input;

message SimulationOptions {

    /**
     * Limits.
     */

    /** The maximum time for each simulation. */
    optional double time_limit                                          = 1;

    /** The maximum species counts stopping conditions. */
    repeated SpeciesLimit species_upper_limit                           = 2;

    /** The minimum species counts stopping conditions. */
    repeated SpeciesLimit species_lower_limit                           = 3;

    /** The maximum barrier crossings stopping conditions. */
    repeated BarrierLimit tracking_barrier_crossing_limit               = 6;


    /**
     * Barriers.
     */

    // A reflecting barrier in species space.
    repeated SpeciesLimit species_reflecting_barrier                    = 10;

    // A reflecting barrier in order parameter sapce.
    repeated OrderParameterLimit order_parameter_reflecting_barrier     = 11;

    // A tracking barrier in species space.
    repeated SpeciesLimit species_tracking_barrier                      = 12;

    // A tracking barrier in order parameter sapce.
    repeated OrderParameterLimit order_parameter_tracking_barrier       = 13;


    /**
     * Misc options.
     */

    /** The batch size (ie number of trajectories) in each work unit */
    optional uint64 parts_per_work_unit                                 = 100 [default=1];

    /** The maximum count of simulation steps run for each work unit part */
    optional uint64 steps_per_work_unit_part                            = 101 [default=100000000]; // default=1e8
}

message SpeciesLimit {

    required uint32 species_index                                       = 1;
    required int32 limit_value                                          = 2;
}

message OrderParameterLimit {

    required uint32 order_parameter_index                               = 1;
    required double limit_value                                         = 2;
}

message BarrierLimit {

    required uint32 barrier_index                                       = 1;
    required uint32 limit_value                                         = 2;
}
