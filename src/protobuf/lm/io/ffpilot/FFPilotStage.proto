/*
 * Copyright 2012-2019 Johns Hopkins University
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Developed by: Roberts Group
 *               Johns Hopkins University
 *               http://biophysics.jhu.edu/roberts/
 *
 * Author(s): Elijah Roberts, Max Klein
 */

syntax = "proto2";
package lm.io.ffpilot;

import "lm/io/ffpilot/FFPilotPhase.proto";
import "lm/io/ffpilot/FFPilotStageOutput.proto";
import "lm/types/OrderParameters.proto";
import "lm/types/Tilings.proto";

message FFPilotStage {

    optional int64 basin_id                           = 1;
    optional uint64 tiling_id                         = 2;
    optional uint64 replicate_id                      = 4 [default=0];

    optional lm.types.Tiling tiling                   = 3;
    optional lm.types.OrderParameters order_parameter = 5;

    optional bool is_pilot_stage    = 21 [default=false];
    optional bool needs_pilot_stage = 22 [default=false];

    /** - each element of ffpilot_phases contains settings/metadata for each individual FFPilotPhase to be run as part of this stage
            - if left blank, the phases will be deduced as so:
                - given that the pilot_stage_output field is not empty, this will be treated as a production stage. The phases will be deduced from pilot_stage_output and tiling
                - otherwise, this will be treated as a pilot stage. The phases will be deduced from the tiling alone */
    repeated lm.io.ffpilot.FFPilotPhase ffpilot_phases = 201;

    /** - the output of another stage. Will be used to parameterize the FFPilot Optimizing Equation when figuring out how many samples/trajectories to run in each phase of this stage */
    optional lm.io.ffpilot.FFPilotStageOutput pilot_stage_output = 301;
}
